/* ==========================================================================
   Index of scss files
   @mixin ========================================================================= */
/* External
   @mixin ========================================================================= */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.select2-container {
  box-sizing: border-box;
  display: inline-block;
  margin: 0;
  position: relative;
  vertical-align: middle; }

.select2-container .select2-selection--single {
  box-sizing: border-box;
  cursor: pointer;
  display: block;
  height: 28px;
  -moz-user-select: none;
   -ms-user-select: none;
       user-select: none;
  -webkit-user-select: none; }

.select2-container .select2-selection--single .select2-selection__rendered {
  display: block;
  padding-left: 8px;
  padding-right: 20px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap; }

.select2-container .select2-selection--single .select2-selection__clear {
  position: relative; }

.select2-container[dir="rtl"] .select2-selection--single .select2-selection__rendered {
  padding-right: 8px;
  padding-left: 20px; }

.select2-container .select2-selection--multiple {
  box-sizing: border-box;
  cursor: pointer;
  display: block;
  min-height: 32px;
  -moz-user-select: none;
   -ms-user-select: none;
       user-select: none;
  -webkit-user-select: none; }

.select2-container .select2-selection--multiple .select2-selection__rendered {
  display: inline-block;
  overflow: hidden;
  padding-left: 8px;
  text-overflow: ellipsis;
  white-space: nowrap; }

.select2-container .select2-search--inline {
  float: left; }

.select2-container .select2-search--inline .select2-search__field {
  box-sizing: border-box;
  border: none;
  font-size: 100%;
  margin-top: 5px;
  padding: 0; }

.select2-container .select2-search--inline .select2-search__field::-webkit-search-cancel-button {
  -webkit-appearance: none; }

.select2-dropdown {
  background-color: white;
  border: 1px solid #aaa;
  border-radius: 4px;
  box-sizing: border-box;
  display: block;
  position: absolute;
  left: -100000px;
  width: 100%;
  z-index: 1051; }

.select2-results {
  display: block; }

.select2-results__options {
  list-style: none;
  margin: 0;
  padding: 0; }

.select2-results__option {
  padding: 6px;
  -moz-user-select: none;
   -ms-user-select: none;
       user-select: none;
  -webkit-user-select: none; }

.select2-results__option[aria-selected] {
  cursor: pointer; }

.select2-container--open .select2-dropdown {
  left: 0; }

.select2-container--open .select2-dropdown--above {
  border-bottom: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0; }

.select2-container--open .select2-dropdown--below {
  border-top: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0; }

.select2-search--dropdown {
  display: block;
  padding: 4px; }

.select2-search--dropdown .select2-search__field {
  padding: 4px;
  width: 100%;
  box-sizing: border-box; }

.select2-search--dropdown .select2-search__field::-webkit-search-cancel-button {
  -webkit-appearance: none; }

.select2-search--dropdown.select2-search--hide {
  display: none; }

.select2-close-mask {
  border: 0;
  margin: 0;
  padding: 0;
  display: block;
  position: fixed;
  left: 0;
  top: 0;
  min-height: 100%;
  min-width: 100%;
  height: auto;
  width: auto;
  opacity: 0;
  z-index: 99;
  background-color: #fff;
  filter: alpha(opacity=0); }

.select2-hidden-accessible {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important; }

.select2-container--default .select2-selection--single {
  background-color: #fff;
  border: 1px solid #aaa;
  border-radius: 4px; }

.select2-container--default .select2-selection--single .select2-selection__rendered {
  color: #444;
  line-height: 28px; }

.select2-container--default .select2-selection--single .select2-selection__clear {
  cursor: pointer;
  float: right;
  font-weight: bold; }

.select2-container--default .select2-selection--single .select2-selection__placeholder {
  color: #999; }

.select2-container--default .select2-selection--single .select2-selection__arrow {
  height: 26px;
  position: absolute;
  top: 1px;
  right: 1px;
  width: 20px; }

.select2-container--default .select2-selection--single .select2-selection__arrow b {
  border-color: #888 transparent transparent transparent;
  border-style: solid;
  border-width: 5px 4px 0 4px;
  height: 0;
  left: 50%;
  margin-left: -4px;
  margin-top: -2px;
  position: absolute;
  top: 50%;
  width: 0; }

.select2-container--default[dir="rtl"] .select2-selection--single .select2-selection__clear {
  float: left; }

.select2-container--default[dir="rtl"] .select2-selection--single .select2-selection__arrow {
  left: 1px;
  right: auto; }

.select2-container--default.select2-container--disabled .select2-selection--single {
  background-color: #eee;
  cursor: default; }

.select2-container--default.select2-container--disabled .select2-selection--single .select2-selection__clear {
  display: none; }

.select2-container--default.select2-container--open .select2-selection--single .select2-selection__arrow b {
  border-color: transparent transparent #888 transparent;
  border-width: 0 4px 5px 4px; }

.select2-container--default .select2-selection--multiple {
  background-color: white;
  border: 1px solid #aaa;
  border-radius: 4px;
  cursor: text; }

.select2-container--default .select2-selection--multiple .select2-selection__rendered {
  box-sizing: border-box;
  list-style: none;
  margin: 0;
  padding: 0 5px;
  width: 100%; }

.select2-container--default .select2-selection--multiple .select2-selection__rendered li {
  list-style: none; }

.select2-container--default .select2-selection--multiple .select2-selection__clear {
  cursor: pointer;
  float: right;
  font-weight: bold;
  margin-top: 5px;
  margin-right: 10px; }

.select2-container--default .select2-selection--multiple .select2-selection__choice {
  background-color: #e4e4e4;
  border: 1px solid #aaa;
  border-radius: 4px;
  cursor: default;
  float: left;
  margin-right: 5px;
  margin-top: 5px;
  padding: 0 5px; }

.select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
  color: #999;
  cursor: pointer;
  display: inline-block;
  font-weight: bold;
  margin-right: 2px; }

.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover {
  color: #333; }

.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice, .select2-container--default[dir="rtl"] .select2-selection--multiple .select2-search--inline {
  float: right; }

.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice {
  margin-left: 5px;
  margin-right: auto; }

.select2-container--default[dir="rtl"] .select2-selection--multiple .select2-selection__choice__remove {
  margin-left: 2px;
  margin-right: auto; }

.select2-container--default.select2-container--focus .select2-selection--multiple {
  border: solid black 1px;
  outline: 0; }

.select2-container--default.select2-container--disabled .select2-selection--multiple {
  background-color: #eee;
  cursor: default; }

.select2-container--default.select2-container--disabled .select2-selection__choice__remove {
  display: none; }

.select2-container--default.select2-container--open.select2-container--above .select2-selection--single, .select2-container--default.select2-container--open.select2-container--above .select2-selection--multiple {
  border-top-left-radius: 0;
  border-top-right-radius: 0; }

.select2-container--default.select2-container--open.select2-container--below .select2-selection--single, .select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0; }

.select2-container--default .select2-search--dropdown .select2-search__field {
  border: 1px solid #aaa; }

.select2-container--default .select2-search--inline .select2-search__field {
  background: transparent;
  border: none;
  outline: 0;
  box-shadow: none;
  -webkit-appearance: textfield; }

.select2-container--default .select2-results > .select2-results__options {
  max-height: 200px;
  overflow-y: auto; }

.select2-container--default .select2-results__option[role=group] {
  padding: 0; }

.select2-container--default .select2-results__option[aria-disabled=true] {
  color: #999; }

.select2-container--default .select2-results__option[aria-selected=true] {
  background-color: #ddd; }

.select2-container--default .select2-results__option .select2-results__option {
  padding-left: 1em; }

.select2-container--default .select2-results__option .select2-results__option .select2-results__group {
  padding-left: 0; }

.select2-container--default .select2-results__option .select2-results__option .select2-results__option {
  margin-left: -1em;
  padding-left: 2em; }

.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option {
  margin-left: -2em;
  padding-left: 3em; }

.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option {
  margin-left: -3em;
  padding-left: 4em; }

.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option {
  margin-left: -4em;
  padding-left: 5em; }

.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option {
  margin-left: -5em;
  padding-left: 6em; }

.select2-container--default .select2-results__option--highlighted[aria-selected] {
  background-color: #5897fb;
  color: white; }

.select2-container--default .select2-results__group {
  cursor: default;
  display: block;
  padding: 6px; }

.select2-container--classic .select2-selection--single {
  background-color: #f7f7f7;
  border: 1px solid #aaa;
  border-radius: 4px;
  outline: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, white), to(#eeeeee));
  background-image: linear-gradient(to bottom, white 50%, #eeeeee 100%);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFFFF', endColorstr='#FFEEEEEE', GradientType=0); }

.select2-container--classic .select2-selection--single:focus {
  border: 1px solid #5897fb; }

.select2-container--classic .select2-selection--single .select2-selection__rendered {
  color: #444;
  line-height: 28px; }

.select2-container--classic .select2-selection--single .select2-selection__clear {
  cursor: pointer;
  float: right;
  font-weight: bold;
  margin-right: 10px; }

.select2-container--classic .select2-selection--single .select2-selection__placeholder {
  color: #999; }

.select2-container--classic .select2-selection--single .select2-selection__arrow {
  background-color: #ddd;
  border: none;
  border-left: 1px solid #aaa;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  height: 26px;
  position: absolute;
  top: 1px;
  right: 1px;
  width: 20px;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, #eeeeee), to(#cccccc));
  background-image: linear-gradient(to bottom, #eeeeee 50%, #cccccc 100%);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFEEEEEE', endColorstr='#FFCCCCCC', GradientType=0); }

.select2-container--classic .select2-selection--single .select2-selection__arrow b {
  border-color: #888 transparent transparent transparent;
  border-style: solid;
  border-width: 5px 4px 0 4px;
  height: 0;
  left: 50%;
  margin-left: -4px;
  margin-top: -2px;
  position: absolute;
  top: 50%;
  width: 0; }

.select2-container--classic[dir="rtl"] .select2-selection--single .select2-selection__clear {
  float: left; }

.select2-container--classic[dir="rtl"] .select2-selection--single .select2-selection__arrow {
  border: none;
  border-right: 1px solid #aaa;
  border-radius: 0;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  left: 1px;
  right: auto; }

.select2-container--classic.select2-container--open .select2-selection--single {
  border: 1px solid #5897fb; }

.select2-container--classic.select2-container--open .select2-selection--single .select2-selection__arrow {
  background: transparent;
  border: none; }

.select2-container--classic.select2-container--open .select2-selection--single .select2-selection__arrow b {
  border-color: transparent transparent #888 transparent;
  border-width: 0 4px 5px 4px; }

.select2-container--classic.select2-container--open.select2-container--above .select2-selection--single {
  border-top: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, from(white), color-stop(50%, #eeeeee));
  background-image: linear-gradient(to bottom, white 0%, #eeeeee 50%);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFFFF', endColorstr='#FFEEEEEE', GradientType=0); }

.select2-container--classic.select2-container--open.select2-container--below .select2-selection--single {
  border-bottom: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, #eeeeee), to(white));
  background-image: linear-gradient(to bottom, #eeeeee 50%, white 100%);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFEEEEEE', endColorstr='#FFFFFFFF', GradientType=0); }

.select2-container--classic .select2-selection--multiple {
  background-color: white;
  border: 1px solid #aaa;
  border-radius: 4px;
  cursor: text;
  outline: 0; }

.select2-container--classic .select2-selection--multiple:focus {
  border: 1px solid #5897fb; }

.select2-container--classic .select2-selection--multiple .select2-selection__rendered {
  list-style: none;
  margin: 0;
  padding: 0 5px; }

.select2-container--classic .select2-selection--multiple .select2-selection__clear {
  display: none; }

.select2-container--classic .select2-selection--multiple .select2-selection__choice {
  background-color: #e4e4e4;
  border: 1px solid #aaa;
  border-radius: 4px;
  cursor: default;
  float: left;
  margin-right: 5px;
  margin-top: 5px;
  padding: 0 5px; }

.select2-container--classic .select2-selection--multiple .select2-selection__choice__remove {
  color: #888;
  cursor: pointer;
  display: inline-block;
  font-weight: bold;
  margin-right: 2px; }

.select2-container--classic .select2-selection--multiple .select2-selection__choice__remove:hover {
  color: #555; }

.select2-container--classic[dir="rtl"] .select2-selection--multiple .select2-selection__choice {
  float: right;
  margin-left: 5px;
  margin-right: auto; }

.select2-container--classic[dir="rtl"] .select2-selection--multiple .select2-selection__choice__remove {
  margin-left: 2px;
  margin-right: auto; }

.select2-container--classic.select2-container--open .select2-selection--multiple {
  border: 1px solid #5897fb; }

.select2-container--classic.select2-container--open.select2-container--above .select2-selection--multiple {
  border-top: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0; }

.select2-container--classic.select2-container--open.select2-container--below .select2-selection--multiple {
  border-bottom: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0; }

.select2-container--classic .select2-search--dropdown .select2-search__field {
  border: 1px solid #aaa;
  outline: 0; }

.select2-container--classic .select2-search--inline .select2-search__field {
  outline: 0;
  box-shadow: none; }

.select2-container--classic .select2-dropdown {
  background-color: white;
  border: 1px solid transparent; }

.select2-container--classic .select2-dropdown--above {
  border-bottom: none; }

.select2-container--classic .select2-dropdown--below {
  border-top: none; }

.select2-container--classic .select2-results > .select2-results__options {
  max-height: 200px;
  overflow-y: auto; }

.select2-container--classic .select2-results__option[role=group] {
  padding: 0; }

.select2-container--classic .select2-results__option[aria-disabled=true] {
  color: grey; }

.select2-container--classic .select2-results__option--highlighted[aria-selected] {
  background-color: #3875d7;
  color: white; }

.select2-container--classic .select2-results__group {
  cursor: default;
  display: block;
  padding: 6px; }

.select2-container--classic.select2-container--open .select2-dropdown {
  border-color: #5897fb; }

/* Base
   @mixin ========================================================================= */
/* ==========================================================================
   Animations
   ========================================================================== */
@-webkit-keyframes zeroToFullWidth {
  from {
    width: 0; }
  to {
    width: 100%; } }
@keyframes zeroToFullWidth {
  from {
    width: 0; }
  to {
    width: 100%; } }

@-webkit-keyframes SlideIn {
  0% {
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    opacity: 0; }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    opacity: 1; } }

@keyframes SlideIn {
  0% {
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
    opacity: 0; }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    opacity: 1; } }

@-webkit-keyframes bounceTopBottom {
  1% {
    top: 0; }
  100% {
    top: -15px; } }

@keyframes bounceTopBottom {
  1% {
    top: 0; }
  100% {
    top: -15px; } }

@-webkit-keyframes SlideDown {
  0% {
    -webkit-transform: translate3d(0, 10px, 0);
            transform: translate3d(0, 10px, 0);
    opacity: 0; }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    opacity: 1; } }

@keyframes SlideDown {
  0% {
    -webkit-transform: translate3d(0, 10px, 0);
            transform: translate3d(0, 10px, 0);
    opacity: 0; }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    opacity: 1; } }

@-webkit-keyframes Loading {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes Loading {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

/* ==========================================================================
   Webfonts
   ========================================================================== */
@font-face {
  font-family: 'Rawline';
  src: url("/static/fonts/rawline-300-webfont.eot");
  src: url("/static/fonts/rawline-300-webfont.eot?#iefix") format("embedded-opentype"), url("/static/fonts/rawline-300-webfont.woff2") format("woff2"), url("/static/fonts/rawline-300-webfont.woff") format("woff"), url("/static/fonts/rawline-300-webfont.ttf") format("truetype"), url("/static/fonts/rawline-300-webfont.svg#rawlinelight") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'Rawline';
  src: url("/static/fonts/rawline-400-webfont.eot");
  src: url("/static/fonts/rawline-400-webfont.eot?#iefix") format("embedded-opentype"), url("/static/fonts/rawline-400-webfont.woff2") format("woff2"), url("/static/fonts/rawline-400-webfont.woff") format("woff"), url("/static/fonts/rawline-400-webfont.ttf") format("truetype"), url("/static/fonts/rawline-400-webfont.svg#rawlineregular") format("svg");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: 'Rawline';
  src: url("/static/fonts/rawline-500-webfont.eot");
  src: url("/static/fonts/rawline-500-webfont.eot?#iefix") format("embedded-opentype"), url("/static/fonts/rawline-500-webfont.woff2") format("woff2"), url("/static/fonts/rawline-500-webfont.woff") format("woff"), url("/static/fonts/rawline-500-webfont.ttf") format("truetype"), url("/static/fonts/rawline-500-webfont.svg#rawlinemedium") format("svg");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'Rawline';
  src: url("/static/fonts/rawline-600-webfont.eot");
  src: url("/static/fonts/rawline-600-webfont.eot?#iefix") format("embedded-opentype"), url("/static/fonts/rawline-600-webfont.woff2") format("woff2"), url("/static/fonts/rawline-600-webfont.woff") format("woff"), url("/static/fonts/rawline-600-webfont.ttf") format("truetype"), url("/static/fonts/rawline-600-webfont.svg#rawlinesemibold") format("svg");
  font-weight: 600;
  font-style: normal; }

@font-face {
  font-family: 'Rawline';
  src: url("/static/fonts/rawline-700-webfont.eot");
  src: url("/static/fonts/rawline-700-webfont.eot?#iefix") format("embedded-opentype"), url("/static/fonts/rawline-700-webfont.woff2") format("woff2"), url("/static/fonts/rawline-700-webfont.woff") format("woff"), url("/static/fonts/rawline-700-webfont.ttf") format("truetype"), url("/static/fonts/rawline-700-webfont.svg#rawlinebold") format("svg");
  font-weight: 700;
  font-style: normal; }

/* ==========================================================================
   Variables
   ========================================================================== */
/* Maps
========================================================================== */
/*
    The names and values of variables in maps are just suggestions/random values.
    Feel free to add new values, modify both the values and/or keys of the items depending on the project and your prefferences.
    For each map, a functions is defined (in base/_functions.scss).
    By default, function names are single a singular form of the map's variable name.
    Eg. To use the "main" color, a getter function "color" is defined.
    To use it, simply call: color(main).
*/
/* Z-index
========================================================================== */
/* Standalone variables
========================================================================== */
/* Animations & transitions
========================================================================== */
/* Hamburger
========================================================================== */
/* Decor
========================================================================== */
/* Search box
========================================================================== */
/* Header
========================================================================== */
/* Header logo
========================================================================== */
/* Logo
========================================================================== */
/* Hamburger
========================================================================== */
/* Icons
========================================================================== */
/* About
========================================================================== */
/* Downloads
========================================================================== */
/* Cookies
========================================================================== */
/* Back To Top
========================================================================== */
/* Video module
========================================================================== */
/* Play
========================================================================== */
/* Control
========================================================================== */
/* Person card & Card list
========================================================================== */
/* Advisor
========================================================================== */
/* Info teaser
========================================================================== */
/* Event cta / Event heading
========================================================================== */
/* Quick link
========================================================================== */
/* Widget
========================================================================== */
/* Two columns layout
========================================================================== */
/* Table
========================================================================== */
/* Form
========================================================================== */
/* Tabs
========================================================================== */
/* Field
========================================================================== */
/* Pop-up
========================================================================== */
/* Timeline
========================================================================== */
/* Download box
========================================================================== */
/* Callouts
========================================================================== */
/* Map
========================================================================== */
/* Loader
========================================================================== */
/* Logos bar
========================================================================== */
/* ==========================================================================
   Media config
   ========================================================================== */
/* ==========================================================================
   Mixins
   ========================================================================== */
/* 1. Font smoothing
========================================================================== */
/* Better font-rendering on OSX
   https://maximilianhoffmann.com/posts/better-font-rendering-on-osx
*/
/* 2. A clearfix for floated elements
========================================================================== */
/* 3. Append a modificator class that changes color/bg
========================================================================== */
/* 2. Headline mixins
========================================================================== */
/* 3. Subtitle mixins
========================================================================== */
/* 4. Body mixins
========================================================================== */
/* 5. Button mixins
========================================================================== */
/* 6. Caption mixins
========================================================================== */
/* 7. Button reset
========================================================================== */
/* ==========================================================================
   Reset
   ========================================================================== */
h4,
p {
  margin: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/* Global texts
========================================================================== */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body {
  font-family: "Rawline", "Arial", sans-serif;
  color: #000000; }

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0; }

h1:not([class]) + h1:not([class]),
h2:not([class]) + h1:not([class]),
h3:not([class]) + h1:not([class]),
h4:not([class]) + h1:not([class]),
h5:not([class]) + h1:not([class]),
h6:not([class]) + h1:not([class]),
p:not([class]) + h1:not([class]),
ul:not([class]) + h1:not([class]),
ol:not([class]) + h1:not([class]), h1:not([class]) +
h2:not([class]),
h2:not([class]) +
h2:not([class]),
h3:not([class]) +
h2:not([class]),
h4:not([class]) +
h2:not([class]),
h5:not([class]) +
h2:not([class]),
h6:not([class]) +
h2:not([class]),
p:not([class]) +
h2:not([class]),
ul:not([class]) +
h2:not([class]),
ol:not([class]) +
h2:not([class]), h1:not([class]) +
h3:not([class]),
h2:not([class]) +
h3:not([class]),
h3:not([class]) +
h3:not([class]),
h4:not([class]) +
h3:not([class]),
h5:not([class]) +
h3:not([class]),
h6:not([class]) +
h3:not([class]),
p:not([class]) +
h3:not([class]),
ul:not([class]) +
h3:not([class]),
ol:not([class]) +
h3:not([class]), h1:not([class]) +
h4:not([class]),
h2:not([class]) +
h4:not([class]),
h3:not([class]) +
h4:not([class]),
h4:not([class]) +
h4:not([class]),
h5:not([class]) +
h4:not([class]),
h6:not([class]) +
h4:not([class]),
p:not([class]) +
h4:not([class]),
ul:not([class]) +
h4:not([class]),
ol:not([class]) +
h4:not([class]), h1:not([class]) +
h5:not([class]),
h2:not([class]) +
h5:not([class]),
h3:not([class]) +
h5:not([class]),
h4:not([class]) +
h5:not([class]),
h5:not([class]) +
h5:not([class]),
h6:not([class]) +
h5:not([class]),
p:not([class]) +
h5:not([class]),
ul:not([class]) +
h5:not([class]),
ol:not([class]) +
h5:not([class]), h1:not([class]) +
h6:not([class]),
h2:not([class]) +
h6:not([class]),
h3:not([class]) +
h6:not([class]),
h4:not([class]) +
h6:not([class]),
h5:not([class]) +
h6:not([class]),
h6:not([class]) +
h6:not([class]),
p:not([class]) +
h6:not([class]),
ul:not([class]) +
h6:not([class]),
ol:not([class]) +
h6:not([class]), h1:not([class]) +
p:not([class]),
h2:not([class]) +
p:not([class]),
h3:not([class]) +
p:not([class]),
h4:not([class]) +
p:not([class]),
h5:not([class]) +
p:not([class]),
h6:not([class]) +
p:not([class]),
p:not([class]) +
p:not([class]),
ul:not([class]) +
p:not([class]),
ol:not([class]) +
p:not([class]), h1:not([class]) +
ul:not([class]),
h2:not([class]) +
ul:not([class]),
h3:not([class]) +
ul:not([class]),
h4:not([class]) +
ul:not([class]),
h5:not([class]) +
ul:not([class]),
h6:not([class]) +
ul:not([class]),
p:not([class]) +
ul:not([class]),
ul:not([class]) +
ul:not([class]),
ol:not([class]) +
ul:not([class]), h1:not([class]) +
ol:not([class]),
h2:not([class]) +
ol:not([class]),
h3:not([class]) +
ol:not([class]),
h4:not([class]) +
ol:not([class]),
h5:not([class]) +
ol:not([class]),
h6:not([class]) +
ol:not([class]),
p:not([class]) +
ol:not([class]),
ul:not([class]) +
ol:not([class]),
ol:not([class]) +
ol:not([class]) {
  margin-top: 60px; }

a {
  cursor: pointer;
  text-decoration: none;
  color: currentColor; }
  a:hover {
    text-decoration: none; }
  a:not([class]) {
    color: #FF6352;
    text-decoration: underline; }
    a:not([class]):hover {
      color: #000000; }

ul,
ol {
  padding-left: 8px;
  margin: 0;
  padding: 0;
  list-style: none; }
  ul:not([class]),
  ol:not([class]) {
    padding-left: 8px; }
    ul:not([class]) li + li,
    ol:not([class]) li + li {
      margin-top: 4px; }

ul:not([class]) {
  list-style-type: disc; }

ol:not([class]) {
  list-style-type: decimal; }

/* Text styles
========================================================================== */
[class*='t-headline-'],
[class*='t-subtitle-'],
[class*='t-body-'] {
  font-family: "Rawline", "Arial", sans-serif; }

.t-headline-1 {
  font-size: 42px;
  font-weight: 500;
  line-height: 1.33333; }
  @media (min-width: 768px) {
    .t-headline-1 {
      font-size: 76px;
      font-weight: 300;
      line-height: 1.05263;
      letter-spacing: -1.5px; } }
  @media (min-width: 1200px) {
    .t-headline-1 {
      font-size: 96px;
      line-height: 1.16667; } }

.t-headline-2 {
  font-size: 26px;
  font-weight: 500;
  line-height: 1.15385; }
  @media (min-width: 768px) {
    .t-headline-2 {
      font-size: 38px;
      line-height: 1.26316; } }
  @media (min-width: 1200px) {
    .t-headline-2 {
      font-size: 48px;
      line-height: 1.16667; } }

.t-headline-3 {
  font-size: 22px;
  font-weight: 500;
  line-height: 1.13636;
  letter-spacing: 0.25px; }
  @media (min-width: 768px) {
    .t-headline-3 {
      font-size: 34px;
      line-height: 1.17647; } }

.t-headline-4 {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px; }

.t-headline-5 {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400; }

.t-subtitle-1 {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px; }

.t-subtitle-2 {
  font-size: 14px;
  font-weight: 700;
  line-height: 1.71429;
  letter-spacing: 0.1px; }

.t-body-1 {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

.t-body-2 {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px; }

.t-button {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px; }

.t-caption {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 12px;
  font-weight: 400;
  line-height: 1.33333;
  letter-spacing: 0.5px; }

/* Text utils
========================================================================== */
.t-light {
  font-weight: 300; }

.t-regular {
  font-weight: 400; }

.t-medium {
  font-weight: 500; }

.t-semibold {
  font-weight: 600; }

.t-bold {
  font-weight: 700; }

.t-center {
  text-align: center; }

.t-right {
  text-align: right; }

.t-left {
  text-align: left; }

.t-regular {
  font-weight: 400; }

/* ==========================================================================
User interface
========================================================================== */
.ui-link {
  position: relative;
  overflow: hidden;
  color: #000000; }
  .ui-link:before {
    position: absolute;
    bottom: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 1px;
    content: '';
    -webkit-transition: 0.18s cubic-bezier(0.52, 0.01, 0.16, 1);
    transition: 0.18s cubic-bezier(0.52, 0.01, 0.16, 1);
    -webkit-transform: scaleX(0);
            transform: scaleX(0);
    -webkit-transform-origin: 0 50%;
            transform-origin: 0 50%;
    background: currentColor; }
  .ui-link:hover:before {
    -webkit-transition-timing-function: cubic-bezier(0.62, 0.02, 0.34, 1);
            transition-timing-function: cubic-bezier(0.62, 0.02, 0.34, 1);
    -webkit-transition-duration: .24s;
            transition-duration: .24s;
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }

.ui-bg--main {
  background-color: #FF6352; }

.ui-bg--accent {
  background-color: #000000; }

.ui-bg--white {
  background-color: #FFFFFF; }

.ui-bg--black {
  background-color: #000000; }

.ui-bg--violet {
  background-color: #9078D7; }

.ui-bg--violet-light {
  background-color: #AD97ED; }

.ui-bg--purple {
  background-color: #AE61C4; }

.ui-bg--orchid {
  background-color: #DC4C81; }

.ui-bg--teal {
  background-color: #00B7B4; }

.ui-bg--teal-light {
  background-color: #A3F5F4; }

.ui-bg--plum {
  background-color: #AEA8BB; }

.ui-bg--plum2 {
  background-color: #E6E3EC; }

.ui-bg--darkviolet {
  background-color: #241E31; }

.ui-bg--gray {
  background-color: #F2F0F6; }

.ui-bg--gray2 {
  background-color: #FAF9FB; }

.ui-bg--darkgray {
  background-color: #D8D8D8; }

.ui-bg--ecru-opacity {
  background-color: rgba(247, 246, 250, 0.95); }

.ui-bg--white-opacity-05 {
  background-color: rgba(255, 255, 255, 0.5); }

.ui-bg--white-opacity-08 {
  background-color: rgba(255, 255, 255, 0.8); }

.ui-bg--black-opacity-01 {
  background-color: rgba(0, 0, 0, 0.1); }

.ui-bg--pink {
  background-color: #F372A1; }

.ui-bg--purple-light {
  background-color: #C5B3FB; }

.ui-color--main {
  color: #FF6352; }

.ui-color--accent {
  color: #000000; }

.ui-color--white {
  color: #FFFFFF; }

.ui-color--black {
  color: #000000; }

.ui-color--violet {
  color: #9078D7; }

.ui-color--violet-light {
  color: #AD97ED; }

.ui-color--purple {
  color: #AE61C4; }

.ui-color--orchid {
  color: #DC4C81; }

.ui-color--teal {
  color: #00B7B4; }

.ui-color--teal-light {
  color: #A3F5F4; }

.ui-color--plum {
  color: #AEA8BB; }

.ui-color--plum2 {
  color: #E6E3EC; }

.ui-color--darkviolet {
  color: #241E31; }

.ui-color--gray {
  color: #F2F0F6; }

.ui-color--gray2 {
  color: #FAF9FB; }

.ui-color--darkgray {
  color: #D8D8D8; }

.ui-color--ecru-opacity {
  color: rgba(247, 246, 250, 0.95); }

.ui-color--white-opacity-05 {
  color: rgba(255, 255, 255, 0.5); }

.ui-color--white-opacity-08 {
  color: rgba(255, 255, 255, 0.8); }

.ui-color--black-opacity-01 {
  color: rgba(0, 0, 0, 0.1); }

.ui-color--pink {
  color: #F372A1; }

.ui-color--purple-light {
  color: #C5B3FB; }

.ui-icon {
  display: -webkit-inline-box;
  display: inline-flex;
  width: 1em;
  height: 1em;
  flex-shrink: 0; }

.ui-unordered-list,
.ui-ordered-list {
  margin: 0;
  padding: 0;
  list-style: none;
  padding-left: 2em; }
  .ui-unordered-list li,
  .ui-ordered-list li {
    margin: 1rem 0; }

.ui-button {
  height: 1em;
  padding: 1em 2em;
  background: #000000;
  color: #FFFFFF;
  border-radius: 2px; }

.ui-form fieldset, fieldset.ui-fieldset {
  margin: 0;
  padding: 0;
  border: 0; }

.ui-form input[type=text]::-ms-clear, input.ui-input[type=text]::-ms-clear {
  display: none; }

.ui-form select, select.ui-select {
  position: relative;
  z-index: 2;
  width: 100%;
  border-radius: 0;
  background: transparent;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
  .ui-form select::-ms-expand, select.ui-select::-ms-expand {
    display: none; }

.ui-form textarea, textarea.ui-textarea {
  max-height: 10em;
  padding: 2em;
  resize: vertical; }

.ui-form input::-webkit-input-placeholder, input.ui-input::-webkit-input-placeholder, input textarea::-webkit-input-placeholder, .ui-form
textarea::-webkit-input-placeholder,
textarea.ui-input::-webkit-input-placeholder,
textarea textarea::-webkit-input-placeholder {
  color: currentColor; }

.ui-form input::-moz-placeholder, input.ui-input::-moz-placeholder, input textarea::-moz-placeholder, .ui-form
textarea::-moz-placeholder,
textarea.ui-input::-moz-placeholder,
textarea textarea::-moz-placeholder {
  color: currentColor; }

.ui-form input:-ms-input-placeholder, input.ui-input:-ms-input-placeholder, input textarea:-ms-input-placeholder, .ui-form
textarea:-ms-input-placeholder,
textarea.ui-input:-ms-input-placeholder,
textarea textarea:-ms-input-placeholder {
  color: currentColor; }

.ui-form input::-ms-input-placeholder, input.ui-input::-ms-input-placeholder, input textarea::-ms-input-placeholder, .ui-form
textarea::-ms-input-placeholder,
textarea.ui-input::-ms-input-placeholder,
textarea textarea::-ms-input-placeholder {
  color: currentColor; }

.ui-form input::placeholder, input.ui-input::placeholder, input textarea::placeholder, .ui-form
textarea::placeholder,
textarea.ui-input::placeholder,
textarea textarea::placeholder {
  color: currentColor; }

.ui-form input, input.ui-input, input select, .ui-form
select,
select.ui-input,
select select {
  padding: 0 1em;
  height: 2rem; }

.ui-form input, input.ui-input, input textarea, input select, .ui-form
textarea,
textarea.ui-input,
textarea textarea,
textarea select, .ui-form
select,
select.ui-input,
select textarea,
select select {
  border-radius: 0;
  box-shadow: none; }
  .ui-form input, .ui-form input:-webkit-autofill, input.ui-input, input.ui-input:-webkit-autofill, input textarea, input textarea:-webkit-autofill, input select, input select:-webkit-autofill, .ui-form
  textarea, .ui-form
  textarea:-webkit-autofill,
  textarea.ui-input,
  textarea.ui-input:-webkit-autofill,
  textarea textarea,
  textarea textarea:-webkit-autofill,
  textarea select,
  textarea select:-webkit-autofill, .ui-form
  select, .ui-form
  select:-webkit-autofill,
  select.ui-input,
  select.ui-input:-webkit-autofill,
  select textarea,
  select textarea:-webkit-autofill,
  select select,
  select select:-webkit-autofill {
    border: solid 1px #FF6352; }
  .ui-form input:-webkit-autofill, input.ui-input:-webkit-autofill, input textarea:-webkit-autofill, input select:-webkit-autofill, .ui-form
  textarea:-webkit-autofill,
  textarea.ui-input:-webkit-autofill,
  textarea textarea:-webkit-autofill,
  textarea select:-webkit-autofill, .ui-form
  select:-webkit-autofill,
  select.ui-input:-webkit-autofill,
  select textarea:-webkit-autofill,
  select select:-webkit-autofill {
    box-shadow: none; }
  .ui-form input:focus, input.ui-input:focus, input textarea:focus, input select:focus, .ui-form
  textarea:focus,
  textarea.ui-input:focus,
  textarea textarea:focus,
  textarea select:focus, .ui-form
  select:focus,
  select.ui-input:focus,
  select textarea:focus,
  select select:focus {
    outline: none; }

/* ==========================================================================
   Utilities
   ========================================================================== */
.u-bg-violet {
  background-color: #9078D7; }

.u-bg-darkviolet {
  background-color: #241E31; }

/* ==========================================================================
   Icons
   ========================================================================== */
.o-icon-wrapper {
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  flex-shrink: 0; }

.o-icon {
  width: 1em;
  height: 1em;
  -webkit-transition: inherit;
  transition: inherit;
  fill: currentColor; }

/* Icons sizes
========================================================================== */
.o-icon--facebook {
  width: .47em;
  font-size: 17px; }

.o-icon--twitter {
  width: 1.16em;
  font-size: 12px; }

.o-icon--instagram {
  font-size: 16px; }

.o-icon--rss {
  font-size: 12px; }

.o-icon--linkedin {
  font-size: 12px; }

.o-icon--long-arrow-up {
  width: .05em;
  font-size: 166px; }

.o-icon--yougov {
  width: 4.44em;
  font-size: 34px; }
  @media (min-width: 1200px) {
    .o-icon--yougov {
      font-size: 32px; } }

.o-icon--arrow-down {
  width: 2em;
  font-size: 5px; }

.o-icon--triangle {
  font-size: 14px; }

.o-icon--search {
  font-size: 28px; }
  @media (min-width: 1200px) {
    .o-icon--search {
      font-size: 18px; } }

.o-icon--right {
  width: 1.1em;
  font-size: 9px; }

.o-icon--cross {
  font-size: 9px; }

.o-icon--arrow-right {
  width: 1.1em;
  font-size: 9px; }

.o-icon--arrow-left {
  width: 1.1em;
  font-size: 9px;
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg); }

.o-icon--arrow-right-bold {
  width: 1.1em;
  font-size: 14px; }

.o-icon--triangle-large {
  width: .85em;
  font-size: 14px; }

.o-icon--cross-large {
  width: .95em;
  font-size: 18px; }

.o-icon--calendar {
  font-size: 20px; }

.o-icon--arrow-simple {
  width: 1.27em;
  font-size: 11px;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg); }

.o-icon--error {
  font-size: 9px; }

.o-icon--tick {
  width: 1.2em;
  font-size: 10px; }

.o-icon--popup {
  font-size: 50px; }

.o-icon--map-pin {
  width: .8em; }

.o-icon--download {
  width: .83em;
  font-size: 18px; }

.o-icon--assurance-mark {
  width: 2.2em;
  font-size: 57px; }

.o-icon--arrow-mid {
  font-size: 19px;
  width: 1.68em; }

/* Layout and sections
   @mixin ========================================================================= */
/* ==========================================================================
   Advisor
   ========================================================================== */
.l-advisor {
  padding-bottom: 40px; }

@media (min-width: 1200px) {
  .l-advisor {
    padding-bottom: 80px; } }

/* ==========================================================================
   Callouts
   ========================================================================== */
.l-callouts {
  width: 100%;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: end;
          justify-content: flex-end;
  padding-bottom: 100px; }

.l-callouts__content {
  max-width: 536px;
  width: 100%; }

.l-callouts__content--full-width {
  max-width: 100%; }

/* ==========================================================================
   Common
   ========================================================================== */
body {
  padding-top: 70px; }

body.is-modal-open {
  position: fixed;
  right: 0;
  left: 0; }

@media (min-width: 1200px) {
  body {
    padding-top: 160px; } }

/* ==========================================================================
   Contact
   ========================================================================== */
.l-contact {
  margin-top: 60px;
  margin-bottom: 60px; }

.l-contact__row--alt {
  padding-top: 24px; }

@media (min-width: 768px) {
  .l-contact {
    display: -webkit-box;
    display: flex;
    margin-bottom: 80px; }
  .l-contact__row {
    width: 50%; }
  .l-contact__row--alt {
    padding-top: 0; } }

@media (min-width: 1200px) {
  .l-contact {
    margin-bottom: 176px; }
  .l-contact__row {
    width: 43%; }
  .l-contact__row--alt {
    width: 57%; } }

/* ==========================================================================
   Cookie
   ========================================================================== */
.l-cookies {
  position: fixed;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-transform: translateY(100%);
          transform: translateY(100%);
  opacity: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(247, 246, 250, 0.95);
  z-index: 3; }

.l-cookies.is-visible {
  -webkit-transform: translateY(0%);
          transform: translateY(0%);
  opacity: 1; }

.section-markup-wrapper .l-cookies {
  -webkit-transform: translateY(0%);
          transform: translateY(0%);
  opacity: 1;
  position: static; }

/* ==========================================================================
   Decor wrapper
   ========================================================================== */
.l-decor-wrapper {
  width: 100%;
  padding-bottom: 160px; }

@media (min-width: 0) and (max-width: 767px) {
  .l-decor-wrapper--mobile-bottom {
    position: relative; }
    .l-decor-wrapper--mobile-bottom:after {
      position: absolute;
      right: 0;
      bottom: 0;
      width: 60%;
      padding-top: 40%;
      content: '';
      -webkit-transform: translateY(50%);
              transform: translateY(50%);
      background-image: url("/static/img/pic-widget-decor-3.png");
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: cover; } }

@media (min-width: 768px) {
  .l-decor-wrapper {
    padding-bottom: 80px; }
  .l-decor-wrapper--top {
    position: relative;
    overflow: hidden;
    padding-top: 144px; }
    .l-decor-wrapper--top:before {
      position: absolute;
      top: 0;
      right: 0;
      width: 324px;
      height: 324px;
      content: '';
      -webkit-transform: translateY(-65%);
              transform: translateY(-65%);
      background-image: url("/static/img/pic-widget-decor-3.png");
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: cover; } }

@media (min-width: 1200px) {
  .l-decor-wrapper {
    padding-bottom: 120px; }
  .l-decor-wrapper--top {
    padding-bottom: 16px; }
  .l-decor-wrapper--top:before {
    width: 50%;
    height: auto;
    padding-top: 25%;
    background-image: url("/static/img/pic-widget-decor-2.png"); } }

/* ==========================================================================
   Filters
   ========================================================================== */
.l-filters {
  width: 100%;
  padding: 16px 0 32px;
  border-width: 1px 0;
  border-style: solid;
  border-color: #AEA8BB; }

@media (min-width: 768px) {
  .l-filters {
    padding: 16px 0; } }

/* ==========================================================================
   Footer
   ========================================================================== */
.l-footer {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  position: relative;
  margin-top: 64px;
  background-color: #FFFFFF; }

.l-footer__about,
.l-footer__action,
.l-footer__list {
  width: 100%;
  padding-left: 30px;
  padding-right: 30px; }

.l-footer__about {
  background-color: #9078D7; }

.l-footer__list {
  background-color: #241E31; }

@media (min-width: 768px) {
  .l-footer {
    margin-top: 80px; }
  .l-footer__about,
  .l-footer__action,
  .l-footer__list {
    padding-left: 60px;
    padding-right: 60px; } }

@media (min-width: 1200px) {
  .l-footer__row {
    display: -ms-grid;
    display: grid;
        grid-template-areas: "about back";
    -ms-grid-columns: 41% 59%;
    grid-template-columns: 41% 59%;
    -ms-grid-rows: auto;
    grid-template-rows: auto;
    margin-bottom: -160px;
    width: 100%; }
  .l-footer__row--alt {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: end;
            justify-content: flex-end;
    width: 100%;
    margin-bottom: 0; }
  .l-footer__about {
    grid-area: about;
    padding-left: calc((100vw - (1320px + 120px))/2);
    padding-right: 0; }
  .l-footer__action {
    grid-area: back;
    padding-right: calc((100vw - (1320px + 120px))/2);
    padding-left: 0; }
  .l-footer__list {
    width: 73%;
    padding-right: calc((100vw - (1320px + 120px))/2);
    padding-left: 0; } }

@media (min-width: 1200px) {
  .l-footer__about {
    -ms-grid-row: 1;
    -ms-grid-column: 1; }
  .l-footer__action {
    -ms-grid-row: 1;
    -ms-grid-column: 2; } }

/* ==========================================================================
   Header
   ========================================================================== */
.l-header {
  position: fixed;
  z-index: 100;
  top: 0;
  right: 0;
  left: 0;
  -webkit-transition: 250ms ease-in-out;
  transition: 250ms ease-in-out;
  overflow: auto; }

.l-header__wrapper {
  overflow: hidden;
  min-height: 616px; }

.is-not-sticky-header .l-header {
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%); }

.is-not-sticky-header.is-menu-opened .l-header,
.is-sticky-header .l-header {
  -webkit-transform: translateY(0);
          transform: translateY(0); }

.l-header__topbar {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  flex-shrink: 0;
  -webkit-box-ordinal-group: 2;
          order: 1;
  padding: 16px 0; }

.l-header__main {
  display: -webkit-box;
  display: flex;
  -webkit-box-flex: 1;
          flex-grow: 1;
  -webkit-box-ordinal-group: 1;
          order: 0;
  width: 100%; }

.l-header__social-media {
  flex-shrink: 0;
  -webkit-box-ordinal-group: 3;
          order: 2; }

@media (min-width: 0) and (max-width: 1199px) {
  .l-header {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    overflow: hidden;
    max-height: 70px;
    -webkit-transition: 250ms ease-in-out;
    transition: 250ms ease-in-out;
    background-color: #FFFFFF; }
  .l-header__wrapper {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    overflow: hidden;
    height: 100%; }
  .is-menu-opened .l-header {
    height: 100vh;
    max-height: 100vh;
    padding-bottom: 24px;
    overflow: auto;
    background-color: #FF6352; }
  .l-header__topbar {
    -webkit-transition: 250ms ease-in-out;
    transition: 250ms ease-in-out;
    -webkit-transform: translateX(0);
            transform: translateX(0); }
  .is-sub-nav-opened .l-header__topbar {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@media (min-width: 768px) and (max-width: 1199px) {
  .l-header__topbar {
    padding: 32px 0; }
  .l-header__wrapper {
    min-height: 825px; } }

@media (min-width: 1200px) {
  .l-header {
    height: auto;
    max-height: unset;
    overflow: visible; }
  .l-header__wrapper {
    min-height: auto;
    overflow: visible; }
  .is-menu-opened .l-header {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%); }
  .l-header__topbar {
    display: block;
    width: 100%;
    padding: 8px 0;
    background-color: #FAF9FB; }
  .l-header__main {
    background-color: #FFFFFF; }
  .l-header__social-media {
    display: none; } }

/* ==========================================================================
   Heading
   ========================================================================== */
.l-heading {
  width: 100%;
  padding: 64px 0 48px; }

@media (min-width: 768px) {
  .l-heading {
    padding: 64px 0; } }

/* ==========================================================================
   Inner
   ========================================================================== */
.l-inner {
  width: 100%;
  margin: 0 auto;
  padding-right: 24px;
  padding-left: 24px; }
  @media (min-width: 768px) {
    .l-inner {
      max-width: 1440px;
      padding-right: 60px;
      padding-left: 60px; } }

@media (min-width: 1200px) {
  .l-inner--small {
    max-width: 768px; } }

/* ==========================================================================
   Locations
   ========================================================================== */
.l-locations {
  width: 100%; }

.l-locations__row {
  width: 100%;
  padding: 32px 0;
  border-bottom: 1px solid #AEA8BB; }

.l-locations__row--no-padding {
  padding: 0 0 16px; }

@media (min-width: 768px) {
  .l-locations__row--no-padding {
    padding: 0; } }

/* ==========================================================================
   News
   ========================================================================== */
.l-news {
  padding-bottom: 50px; }

.l-news__action {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-top: 32px; }

@media (min-width: 768px) {
  .l-news {
    padding-bottom: 260px; } }

@media (min-width: 1200px) {
  .l-news {
    padding-bottom: 70px; }
  .l-news__action {
    margin-top: 64px; } }

/* ==========================================================================
   Main content
   ========================================================================== */
* {
  box-sizing: border-box; }

/* ==========================================================================
   Navigation
   ========================================================================== */
.l-nav__main {
  width: 100%; }

.l-nav__main .c-nav {
  width: 100%; }

.l-nav__main .l-search {
  width: 100%; }

.l-nav__sub {
  width: 100%; }

@media (min-width: 0) and (max-width: 1199px) {
  .l-nav {
    display: -webkit-box;
    display: flex;
    width: 200%;
    -webkit-transition: 250ms ease-in-out;
    transition: 250ms ease-in-out; }
  .is-sub-nav-opened .l-nav {
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%); }
  .l-nav__main .c-nav {
    width: 100%;
    padding: 0; } }

@media (min-width: 1200px) {
  .l-nav {
    width: 100%; }
  .l-nav__sub {
    position: absolute;
    top: 100%;
    right: 0;
    left: 0;
    overflow: hidden;
    max-height: 0;
    -webkit-transition: 250ms ease-in-out;
    transition: 250ms ease-in-out;
    -webkit-transform: translateY(-10px);
            transform: translateY(-10px);
    opacity: 0;
    background-color: #E6E3EC; }
  .is-sub-nav-opened .l-nav__sub {
    height: 230px;
    max-height: 230px;
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
    box-shadow: 0 9px 12px rgba(0, 0, 0, 0.2); }
  .is-not-sticky-header.is-sub-nav-opened .l-nav__sub {
    max-height: 0;
    box-shadow: none; }
  .l-nav__main {
    display: -webkit-box;
    display: flex; }
  .l-nav__main .c-nav {
    width: calc(100% - 260px);
    padding: 0 16px; }
  .l-nav__main .l-search {
    width: 260px; } }

/* ==========================================================================
   Pop Up
   ========================================================================== */
.section-markup-wrapper .l-popup-wrapper {
  display: -webkit-box;
  display: flex;
  position: relative;
  padding: 8px 0; }

.l-popup-wrapper {
  position: fixed;
  display: none;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  right: 0;
  bottom: 0;
  padding: 0 24px;
  width: 100%;
  height: 100vh;
  background-color: rgba(255, 255, 255, 0.5);
  z-index: 101; }

.l-popup-wrapper.is-opened {
  display: -webkit-box;
  display: flex; }

@media (min-width: 768px) {
  .l-popup-wrapper {
    padding: 0 60px; } }

@media (min-width: 1200px) {
  .l-popup-wrapper {
    padding: 0; } }

/* ==========================================================================
   Quick links
   ========================================================================== */
.l-quick-links {
  width: 100%;
  padding: 112px 0 0; }

.l-quick-links__heading {
  margin-bottom: 32px;
  color: #000000; }

.l-quick-links__content {
  width: 100%; }

@media (min-width: 1200px) {
  .l-quick-links {
    width: 100%;
    padding: 96px 0; }
  .l-quick-links__heading {
    margin-bottom: 56px; } }

/* ==========================================================================
   Quote
   ========================================================================== */
.l-quote {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: end;
          justify-content: flex-end;
  width: 100%;
  padding-top: 80px; }

@media (min-width: 1200px) {
  .l-quote {
    padding-top: 16px; } }

/* ==========================================================================
   Search results
   ========================================================================== */
.l-search-results {
  padding-top: 50px; }

.l-search-results__heading {
  margin-bottom: 64px; }

.l-search-results__cta {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  margin-top: 32px; }

@media (min-width: 768px) {
  .l-search-results {
    margin-top: 60px; }
  .l-search-results__cta {
    margin-top: 64px; } }

@media (min-width: 1200px) {
  .l-search-results {
    margin-bottom: 72px; }
  .l-search-results__heading {
    margin-bottom: 72px; }
  .l-search-results__list {
    width: 100%; }
  .l-search-results__cta {
    margin-top: 64px; } }

/* ==========================================================================
   Search
   ========================================================================== */
.l-search {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  margin-top: 16px; }

.l-search__action {
  display: none; }

.l-search__main {
  display: -webkit-box;
  display: flex;
  width: 100%; }

@media (min-width: 768px) {
  .l-search {
    margin-top: 80px; } }

@media (min-width: 1200px) {
  .l-search {
    -webkit-box-pack: end;
            justify-content: flex-end;
    margin-top: 0; }
  .l-search__action {
    display: -webkit-box;
    display: flex; }
  .l-search__main {
    display: none; } }

/* ==========================================================================
   Sections
   ========================================================================== */
/* ==========================================================================
   Spacing
   ========================================================================== */
.l-spacing {
  width: 100%; }

.l-spacing--s {
  padding: 10px; }

.l-spacing--m {
  padding: 20px; }

.l-spacing--l {
  padding: 40px; }

@media (min-width: 768px) {
  .l-spacing--s {
    padding: 20px; }
  .l-spacing--m {
    padding: 40px; }
  .l-spacing--l {
    padding: 80px; } }

@media (min-width: 1200px) {
  .l-spacing--s {
    padding: 40px; }
  .l-spacing--m {
    padding: 80px; }
  .l-spacing--l {
    padding: 120px; } }

/* ==========================================================================
   Sections
   ========================================================================== */
.l-real-text {
  padding-bottom: 40px; }

@media (min-width: 1200px) {
  .l-real-text {
    padding-bottom: 80px; }
  .l-real-text figure:last-child {
    margin-bottom: 0; } }

/* ==========================================================================
   Tabs
   ========================================================================== */
.l-tabs {
  padding-bottom: 100px; }

/* ==========================================================================
   Timeline
   ========================================================================== */
.l-timeline {
  position: relative;
  width: 100%;
  padding-top: 208px; }

.l-timeline__col {
  width: 100%; }

.l-timeline__col--fixed {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  padding: 32px 0;
  background-color: #FFFFFF;
  z-index: 1; }

.l-timeline__col--fixed.is-sticky {
  position: fixed;
  top: 0;
  bottom: auto; }

.l-timeline__col--fixed.is-absolute {
  position: absolute;
  top: auto;
  bottom: 0; }

.l-timeline__col--margin-top {
  margin-top: 48px; }

@media (min-width: 768px) {
  .l-timeline {
    display: -webkit-box;
    display: flex;
    padding-top: 0; }
  .l-timeline__col {
    width: 50%; }
  .l-timeline__col.is-sticky {
    margin-left: 0px;
    width: 50%; }
  .l-timeline__col--margin-top {
    margin-top: 0;
    margin-left: 50%; }
  .l-timeline__col--fixed {
    margin-left: -60px;
    padding: 0;
    width: calc(50% + (10px * 6));
    background-color: transparent; } }

@media (min-width: 1200px) {
  .l-timeline__col--fixed {
    background-color: transparent; }
  .l-timeline__col.is-sticky {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: end;
            justify-content: flex-end;
    margin-left: 0px;
    width: 50%; }
  .l-timeline__col.is-sticky .c-counter-box {
    width: 100%;
    max-width: 720px; } }

/* ==========================================================================
   Two cols section
   ========================================================================== */
.l-two-cols {
  width: 100%;
  padding-top: 16px; }

.l-two-cols--grid {
  display: -ms-grid;
  display: grid;
  grid-row-gap: 80px;
  -ms-grid-columns: 1fr;
  grid-template-columns: 1fr;
  -ms-grid-rows: (auto)[2];
  grid-template-rows: repeat(2, auto); }

.l-two-cols--grid .l-two-cols__box--socials {
  display: none; }

.l-two-cols--grid .l-two-cols__box--with-decor-left {
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 2;
  -ms-grid-row-span: 1;
  grid-row: 2 / 3; }

.l-two-cols--grid .l-two-cols__box--simple-widget {
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 1;
  -ms-grid-row-span: 1;
  grid-row: 1 / 2; }

.l-two-cols--grid-alt .l-two-cols__box--simple-widget-alt {
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 2;
  -ms-grid-row-span: 1;
  grid-row: 2 / 3; }

.l-two-cols__col {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%; }

.l-two-cols__col--end {
  -webkit-box-align: end;
          align-items: flex-end; }

.l-two-cols__col--center {
  -webkit-box-align: center;
          align-items: center; }

.l-two-cols__row + .l-two-cols__row {
  margin-top: 72px; }

.l-two-cols__row + .l-two-cols__row--with-decor-left {
  margin-top: 0; }

.l-two-cols__box--with-decor-left {
  position: relative;
  padding-top: 48px; }
  .l-two-cols__box--with-decor-left:before {
    position: absolute;
    top: 0;
    left: -60px;
    width: 328px;
    height: 328px;
    content: '';
    background-image: url("/static/img/pic-widget-decor-2.png");
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: cover; }

.l-two-cols--grid-alt .l-two-cols__box--simple-widget-alt {
  -ms-grid-row: 2;
  -ms-grid-row-span: 1;
  grid-row: 2 /3; }

.l-two-cols--grid-alt .l-two-cols__box--simple-widget {
  -ms-grid-row: 1;
  -ms-grid-row-span: 1;
  grid-row: 1 /2; }

@media (min-width: 768px) {
  .l-two-cols--grid {
    -ms-grid-columns: (auto)[2];
    grid-template-columns: repeat(2, auto); }
  .l-two-cols--grid .l-two-cols__box--with-decor-left {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1 / 3; }
  .l-two-cols--grid .l-two-cols__box--simple-widget {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-align: end;
            align-items: flex-end;
    -ms-grid-column: 2;
    -ms-grid-column-span: 1;
    grid-column: 2 / 3;
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    grid-row: 1 / 2; }
  .l-two-cols--grid .l-two-cols__box--socials {
    display: block;
    padding-right: 16px;
    -ms-grid-column: 1;
    -ms-grid-column-span: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    grid-row: 1 / 2; }
  .l-two-cols__box--with-decor-left {
    padding-top: 80px; }
    .l-two-cols__box--with-decor-left:before {
      background-image: url("/static/img/pic-widget-decor-1.png"); }
  .l-two-cols--grid-alt .l-two-cols__box--simple-widget {
    -ms-grid-row: 1;
    -ms-grid-row-span: 1;
    grid-row: 1 / 2;
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1 / 3;
    -webkit-box-align: start;
            align-items: flex-start; }
  .l-two-cols--grid-alt .l-two-cols__box--simple-widget-alt {
    -ms-grid-column: 2;
    -ms-grid-column-span: 1;
    grid-column: 2 / 3;
    -ms-grid-row: 2;
    -ms-grid-row-span: 1;
    grid-row: 2 / 3; } }

@media (min-width: 1200px) {
  .l-two-cols {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between; }
  .l-two-cols--grid {
    display: block;
    -webkit-column-count: 2;
       -moz-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 3em;
       -moz-column-gap: 3em;
            column-gap: 3em; }
  .l-two-cols--grid .l-two-cols__box {
    -webkit-column-break-inside: avoid;
       -moz-column-break-inside: avoid;
            break-inside: avoid-column; }
  .l-two-cols--grid .l-two-cols__box--with-decor-left {
    margin-top: 72px;
    -webkit-column-break-after: always;
       -moz-column-break-after: always;
            break-after: always; }
  .l-two-cols--grid-alt .l-two-cols__box--simple-widget-alt {
    margin-top: 72px; }
  .l-two-cols--grid .l-two-cols__box--quote {
    margin-top: 112px;
    padding-left: 0; }
  .l-two-cols--grid .l-two-cols__box--socials {
    padding-top: 144px;
    padding-right: 0; }
  .l-two-cols__col {
    width: 50%; }
  .l-two-cols__row + .l-two-cols__row {
    margin-top: 192px; }
  .l-two-cols__row + .l-two-cols__row--with-decor-left {
    margin-top: 72px; } }

/* Components
    @mixin ========================================================================= */
/* ==========================================================================
WYSIWYG
========================================================================== */
.c-wysiwyg {
  width: 100%;
  font-family: "Rawline", "Arial", sans-serif; }
  .c-wysiwyg h1 {
    font-size: 42px;
    font-weight: 500;
    line-height: 1.33333; }
    @media (min-width: 768px) {
      .c-wysiwyg h1 {
        font-size: 76px;
        font-weight: 300;
        line-height: 1.05263;
        letter-spacing: -1.5px; } }
    @media (min-width: 1200px) {
      .c-wysiwyg h1 {
        font-size: 96px;
        line-height: 1.16667; } }
  .c-wysiwyg h2 {
    font-size: 26px;
    font-weight: 500;
    line-height: 1.15385; }
    @media (min-width: 768px) {
      .c-wysiwyg h2 {
        font-size: 38px;
        line-height: 1.26316; } }
    @media (min-width: 1200px) {
      .c-wysiwyg h2 {
        font-size: 48px;
        line-height: 1.16667; } }
  .c-wysiwyg h3 {
    font-size: 22px;
    font-weight: 500;
    line-height: 1.13636;
    letter-spacing: 0.25px; }
    @media (min-width: 768px) {
      .c-wysiwyg h3 {
        font-size: 34px;
        line-height: 1.17647; } }
  .c-wysiwyg h4 {
    font-size: 20px;
    font-weight: 500;
    line-height: 1.2;
    letter-spacing: 0.15px; }
  .c-wysiwyg h5 {
    font-size: 20px;
    font-weight: 500;
    line-height: 1.2;
    letter-spacing: 0.15px;
    font-weight: 400; }

.c-wysiwyg p {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

.c-wysiwyg strong {
  font-weight: 700; }

.c-wysiwyg h6 {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px; }

.c-wysiwyg ul {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px;
  padding-left: 20px; }

.c-wysiwyg ol {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px;
  padding-left: 20px; }

.c-wysiwyg figure {
  width: 100%;
  margin: 0; }

.c-wysiwyg * + figure {
  margin: 48px 0; }

.c-wysiwyg img {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto; }

.c-wysiwyg figcaption {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 12px;
  font-weight: 400;
  line-height: 1.33333;
  letter-spacing: 0.5px;
  margin-top: 16px; }

@media (min-width: 768px) {
  .c-wysiwyg * + figure {
    margin: 72px 0; } }

@media (min-width: 1200px) {
  .c-wysiwyg figcaption {
    margin-top: 20px; } }

.c-wysiwyg h1:not([class]) + h1:not([class]),
.c-wysiwyg h1:not([class]) + h2:not([class]),
.c-wysiwyg h1:not([class]) + h3:not([class]),
.c-wysiwyg h1:not([class]) + h4:not([class]),
.c-wysiwyg h1:not([class]) + h5:not([class]),
.c-wysiwyg h2:not([class]) + h1:not([class]),
.c-wysiwyg h2:not([class]) + h2:not([class]),
.c-wysiwyg h2:not([class]) + h3:not([class]),
.c-wysiwyg h2:not([class]) + h4:not([class]),
.c-wysiwyg h2:not([class]) + h5:not([class]),
.c-wysiwyg h3:not([class]) + h1:not([class]),
.c-wysiwyg h3:not([class]) + h2:not([class]),
.c-wysiwyg h3:not([class]) + h3:not([class]),
.c-wysiwyg h3:not([class]) + h4:not([class]),
.c-wysiwyg h3:not([class]) + h5:not([class]),
.c-wysiwyg h4:not([class]) + h1:not([class]),
.c-wysiwyg h4:not([class]) + h2:not([class]),
.c-wysiwyg h4:not([class]) + h3:not([class]),
.c-wysiwyg h4:not([class]) + h4:not([class]),
.c-wysiwyg h4:not([class]) + h5:not([class]),
.c-wysiwyg h5:not([class]) + h1:not([class]),
.c-wysiwyg h5:not([class]) + h2:not([class]),
.c-wysiwyg h5:not([class]) + h3:not([class]),
.c-wysiwyg h5:not([class]) + h4:not([class]),
.c-wysiwyg h5:not([class]) + h5:not([class]),
.c-wysiwyg h6:not([class]) + h1:not([class]),
.c-wysiwyg h6:not([class]) + h2:not([class]),
.c-wysiwyg h6:not([class]) + h3:not([class]),
.c-wysiwyg h6:not([class]) + h4:not([class]),
.c-wysiwyg h6:not([class]) + h5:not([class]) {
  margin-top: 50px; }

.c-wysiwyg h1:not([class]) + h6:not([class]),
.c-wysiwyg h2:not([class]) + h6:not([class]),
.c-wysiwyg h3:not([class]) + h6:not([class]),
.c-wysiwyg h4:not([class]) + h6:not([class]),
.c-wysiwyg h5:not([class]) + h6:not([class]),
.c-wysiwyg h6:not([class]) + h6:not([class]),
.c-wysiwyg h1:not([class]) + p:not([class]),
.c-wysiwyg h2:not([class]) + p:not([class]),
.c-wysiwyg h1:not([class]) + ol:not([class]),
.c-wysiwyg h2:not([class]) + ol:not([class]),
.c-wysiwyg h1:not([class]) + ul:not([class]),
.c-wysiwyg h2:not([class]) + ul:not([class]) {
  margin-top: 30px; }

.c-wysiwyg h3:not([class]) + p:not([class]),
.c-wysiwyg h4:not([class]) + p:not([class]),
.c-wysiwyg h5:not([class]) + p:not([class]),
.c-wysiwyg h6:not([class]) + p:not([class]),
.c-wysiwyg h3:not([class]) + ol:not([class]),
.c-wysiwyg h4:not([class]) + ol:not([class]),
.c-wysiwyg h5:not([class]) + ol:not([class]),
.c-wysiwyg h6:not([class]) + ol:not([class]),
.c-wysiwyg h3:not([class]) + ul:not([class]),
.c-wysiwyg h4:not([class]) + ul:not([class]),
.c-wysiwyg h5:not([class]) + ul:not([class]),
.c-wysiwyg h6:not([class]) + ul:not([class]) {
  margin-top: 15px; }

.c-wysiwyg p:not([class]) + h1:not([class]),
.c-wysiwyg p:not([class]) + h2:not([class]),
.c-wysiwyg p:not([class]) + h3:not([class]),
.c-wysiwyg p:not([class]) + h4:not([class]),
.c-wysiwyg p:not([class]) + h5:not([class]),
.c-wysiwyg p:not([class]) + h6:not([class]),
.c-wysiwyg ul:not([class]) + h1:not([class]),
.c-wysiwyg ul:not([class]) + h2:not([class]),
.c-wysiwyg ul:not([class]) + h3:not([class]),
.c-wysiwyg ul:not([class]) + h4:not([class]),
.c-wysiwyg ul:not([class]) + h5:not([class]),
.c-wysiwyg ul:not([class]) + h6:not([class]),
.c-wysiwyg ol:not([class]) + h1:not([class]),
.c-wysiwyg ol:not([class]) + h2:not([class]),
.c-wysiwyg ol:not([class]) + h3:not([class]),
.c-wysiwyg ol:not([class]) + h4:not([class]),
.c-wysiwyg ol:not([class]) + h5:not([class]),
.c-wysiwyg ol:not([class]) + h6:not([class]) {
  margin-top: 60px; }

.c-wysiwyg p:not([class]) + p:not([class]),
.c-wysiwyg ul:not([class]) + ul:not([class]),
.c-wysiwyg ol:not([class]) + ol:not([class]),
.c-wysiwyg p:not([class]) + ul:not([class]),
.c-wysiwyg p:not([class]) + ol:not([class]),
.c-wysiwyg ul:not([class]) + p:not([class]),
.c-wysiwyg ol:not([class]) + p:not([class]) {
  margin-top: 15px; }

.c-wysiwyg--small h1:not([class]) + h1:not([class]),
.c-wysiwyg--small h2:not([class]) + h1:not([class]),
.c-wysiwyg--small h3:not([class]) + h1:not([class]),
.c-wysiwyg--small h4:not([class]) + h1:not([class]),
.c-wysiwyg--small h5:not([class]) + h1:not([class]),
.c-wysiwyg--small h6:not([class]) + h1:not([class]),
.c-wysiwyg--small p:not([class]) + h1:not([class]),
.c-wysiwyg--small ul:not([class]) + h1:not([class]),
.c-wysiwyg--small ol:not([class]) + h1:not([class]),
.c-wysiwyg--small h1:not([class]) + h2:not([class]),
.c-wysiwyg--small h2:not([class]) + h2:not([class]),
.c-wysiwyg--small h3:not([class]) + h2:not([class]),
.c-wysiwyg--small h4:not([class]) + h2:not([class]),
.c-wysiwyg--small h5:not([class]) + h2:not([class]),
.c-wysiwyg--small h6:not([class]) + h2:not([class]),
.c-wysiwyg--small p:not([class]) + h2:not([class]),
.c-wysiwyg--small ul:not([class]) + h2:not([class]),
.c-wysiwyg--small ol:not([class]) + h2:not([class]),
.c-wysiwyg--small h1:not([class]) + h3:not([class]),
.c-wysiwyg--small h2:not([class]) + h3:not([class]),
.c-wysiwyg--small h3:not([class]) + h3:not([class]),
.c-wysiwyg--small h4:not([class]) + h3:not([class]),
.c-wysiwyg--small h5:not([class]) + h3:not([class]),
.c-wysiwyg--small h6:not([class]) + h3:not([class]),
.c-wysiwyg--small p:not([class]) + h3:not([class]),
.c-wysiwyg--small ul:not([class]) + h3:not([class]),
.c-wysiwyg--small ol:not([class]) + h3:not([class]),
.c-wysiwyg--small h1:not([class]) + h4:not([class]),
.c-wysiwyg--small h2:not([class]) + h4:not([class]),
.c-wysiwyg--small h3:not([class]) + h4:not([class]),
.c-wysiwyg--small h4:not([class]) + h4:not([class]),
.c-wysiwyg--small h5:not([class]) + h4:not([class]),
.c-wysiwyg--small h6:not([class]) + h4:not([class]),
.c-wysiwyg--small p:not([class]) + h4:not([class]),
.c-wysiwyg--small ul:not([class]) + h4:not([class]),
.c-wysiwyg--small ol:not([class]) + h4:not([class]),
.c-wysiwyg--small h1:not([class]) + h5:not([class]),
.c-wysiwyg--small h2:not([class]) + h5:not([class]),
.c-wysiwyg--small h3:not([class]) + h5:not([class]),
.c-wysiwyg--small h4:not([class]) + h5:not([class]),
.c-wysiwyg--small h5:not([class]) + h5:not([class]),
.c-wysiwyg--small h6:not([class]) + h5:not([class]),
.c-wysiwyg--small p:not([class]) + h5:not([class]),
.c-wysiwyg--small ul:not([class]) + h5:not([class]),
.c-wysiwyg--small ol:not([class]) + h5:not([class]),
.c-wysiwyg--small h1:not([class]) + h6:not([class]),
.c-wysiwyg--small h2:not([class]) + h6:not([class]),
.c-wysiwyg--small h3:not([class]) + h6:not([class]),
.c-wysiwyg--small h4:not([class]) + h6:not([class]),
.c-wysiwyg--small h5:not([class]) + h6:not([class]),
.c-wysiwyg--small h6:not([class]) + h6:not([class]),
.c-wysiwyg--small p:not([class]) + h6:not([class]),
.c-wysiwyg--small ul:not([class]) + h6:not([class]),
.c-wysiwyg--small ol:not([class]) + h6:not([class]),
.c-wysiwyg--small h1:not([class]) + p:not([class]),
.c-wysiwyg--small h2:not([class]) + p:not([class]),
.c-wysiwyg--small h3:not([class]) + p:not([class]),
.c-wysiwyg--small h4:not([class]) + p:not([class]),
.c-wysiwyg--small h5:not([class]) + p:not([class]),
.c-wysiwyg--small h6:not([class]) + p:not([class]),
.c-wysiwyg--small p:not([class]) + p:not([class]),
.c-wysiwyg--small ul:not([class]) + p:not([class]),
.c-wysiwyg--small ol:not([class]) + p:not([class]),
.c-wysiwyg--small h1:not([class]) + ul:not([class]),
.c-wysiwyg--small h2:not([class]) + ul:not([class]),
.c-wysiwyg--small h3:not([class]) + ul:not([class]),
.c-wysiwyg--small h4:not([class]) + ul:not([class]),
.c-wysiwyg--small h5:not([class]) + ul:not([class]),
.c-wysiwyg--small h6:not([class]) + ul:not([class]),
.c-wysiwyg--small p:not([class]) + ul:not([class]),
.c-wysiwyg--small ul:not([class]) + ul:not([class]),
.c-wysiwyg--small ol:not([class]) + ul:not([class]),
.c-wysiwyg--small h1:not([class]) + ol:not([class]),
.c-wysiwyg--small h2:not([class]) + ol:not([class]),
.c-wysiwyg--small h3:not([class]) + ol:not([class]),
.c-wysiwyg--small h4:not([class]) + ol:not([class]),
.c-wysiwyg--small h5:not([class]) + ol:not([class]),
.c-wysiwyg--small h6:not([class]) + ol:not([class]),
.c-wysiwyg--small p:not([class]) + ol:not([class]),
.c-wysiwyg--small ul:not([class]) + ol:not([class]),
.c-wysiwyg--small ol:not([class]) + ol:not([class]) {
  margin-top: 24px; }

/* ==========================================================================
Underline link
========================================================================== */
.c-underline-link {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px;
  position: relative;
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-align: center;
          align-items: center;
  padding: 4px 0; }

.c-underline-link--inline {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.71429;
  letter-spacing: 0.5px;
  display: inline-block;
  padding: 0;
  font-weight: 300; }
  .c-underline-link--inline:before {
    display: none; }

.c-underline-link--left {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: start;
          align-items: flex-start; }

.c-underline-link__text-wrapper {
  display: inline-block; }

.c-underline-link__text {
  display: inline;
  padding: 4px 0;
  -webkit-transition: background-size .3s ease-in-out;
  transition: background-size .3s ease-in-out;
  background-image: linear-gradient(transparent calc(100% - 2px), #FF6352 2px);
  background-repeat: no-repeat;
  background-size: 0 100%; }
  @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {
    .c-underline-link__text {
      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(94%, transparent), color-stop(6%, #FF6352));
      background-image: linear-gradient(transparent 94%, #FF6352 6%); } }

.c-underline-link:before {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  height: 2px;
  content: '';
  -webkit-transition: -webkit-transform 0.3s ease;
  transition: -webkit-transform 0.3s ease;
  transition: transform 0.3s ease;
  transition: transform 0.3s ease, -webkit-transform 0.3s ease;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
  background-color: #FF6352; }

.c-sub-nav .is-active .c-underline-link:before {
  background-color: #FF6352; }

.c-underline-link--desktop {
  display: none; }

.c-underline-link__icon {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-top: 2px;
  margin-left: 8px;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.c-underline-link--inline .c-underline-link__icon {
  display: inline;
  margin-left: 0; }

.c-underline-link__icon--no-margin {
  margin-top: 0;
  margin-left: 0; }

.c-underline-link--revert .c-underline-link__icon {
  margin-right: 8px;
  margin-left: 0; }

.c-underline-link__icon .o-icon--cross {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  fill: #FF6352; }

.c-underline-link--with-rotation:hover .c-underline-link__icon {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg); }

@media (min-width: 768px) {
  .is-active .c-underline-link:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left;
    background-color: #FF6352; }
  .is-active > .c-underline-link:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left;
    background-color: #AEA8BB; }
  .is-active .c-underline-link--inline .c-underline-link__text {
    background-size: 100% 100%; } }

@media (min-width: 1200px) {
  .c-underline-link:hover:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left; }
  .c-underline-link--desktop {
    display: -webkit-inline-box;
    display: inline-flex; }
  .c-nav-list__item .c-underline-link--desktop + .c-underline-link {
    display: none; }
  .c-underline-link--inline:hover .c-underline-link__text {
    background-size: 100% 100%; } }

/* ==========================================================================
   About
   ========================================================================== */
.c-about {
  position: relative;
  width: 100%;
  margin: 0;
  padding-top: 32px;
  padding-bottom: 32px;
  color: #FFFFFF;
  background-color: #9078D7; }

.c-about__text {
  max-width: 351px;
  margin-top: 34px; }

.c-about__text h5:not([class]) + p:not([class]) {
  margin-top: 0; }

.c-about__copyright {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px;
  max-width: 212px;
  margin-top: 54px; }

.c-about__policy .c-underline-link {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px; }

.c-about__social {
  margin-top: 40px; }

@media (min-width: 768px) {
  .c-about__policy,
  .c-about__copyright {
    max-width: 100%; }
  .c-about__social {
    position: absolute;
    right: 32px;
    bottom: 32px; }
  .c-about__social {
    margin-top: 0; } }

@media (min-width: 1200px) {
  .c-about__social {
    bottom: -288px;
    left: 60px; }
  .c-about {
    z-index: 1;
    padding-top: 55px;
    padding-bottom: 55px;
    padding-left: 60px; } }

/* ==========================================================================
   Accordion
   ========================================================================== */
.c-accordion__toggler {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
          align-items: center;
  padding: 24px;
  background-color: #F2F0F6;
  color: #000000;
  width: 100%;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  border: none; }
  .c-accordion__toggler:focus {
    outline: 0; }

.c-accordion__heading {
  padding-right: 8px;
  text-align: left; }

.c-accordion.is-opened .c-accordion__toggler {
  background-color: #9078D7;
  color: #FFFFFF; }

.c-accordion .c-info h4:not([class]) + h4:not([class]) {
  margin-top: 0; }

.c-accordion__content-wrapper {
  overflow: hidden;
  max-height: 0;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  opacity: .2; }

.c-accordion.is-opened .c-accordion__content-wrapper {
  max-height: 10000px;
  opacity: 1; }

.c-accordion__content {
  padding-left: 24px;
  padding-right: 24px;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.c-accordion.is-opened .c-accordion__content {
  padding-top: 24px;
  padding-bottom: 24px; }

.c-accordion .o-icon {
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.c-accordion.is-opened .o-icon {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg); }

/* ==========================================================================
   Accordion list
   ========================================================================== */
.c-accordion-list,
.c-accordion-list__item {
  width: 100%; }

.c-accordion-list__item:not(:first-of-type) {
  margin-top: 8px; }

/* ==========================================================================
   Advisor
   ========================================================================== */
.c-advisor {
  position: relative;
  width: 100%;
  padding: 20px 0 20px 22px;
  color: #FFFFFF;
  background-color: #AD97ED;
  background-position: left; }

.c-advisor--alt {
  background-color: #9078D7; }

.c-advisor__heading {
  margin-bottom: 9.6px;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 700; }

.c-advisor__company,
.c-advisor__address {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px; }

.c-advisor__address {
  font-weight: 400; }

.c-advisor__address {
  margin-bottom: 36px;
  font-style: normal; }

.c-advisor__action .c-underline-link {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px; }

@media (min-width: 768px) {
  .c-advisor:before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    display: block;
    width: 33.33333%;
    content: '';
    background-image: url("/static/img/img-layer.png"); } }

@media (min-width: 1200px) {
  .c-advisor:before {
    width: 36%; } }

/* ==========================================================================
   Advisor list
   ========================================================================== */
.c-advisor-list {
  margin: 0;
  padding: 0;
  list-style: none; }

.c-advisor-list__item + .c-advisor-list__item {
  margin-top: 24px; }

@media (min-width: 768px) {
  .c-advisor-list__item {
    max-width: 504px;
    margin: 0 auto; } }

@media (min-width: 1200px) {
  .c-advisor-list {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between;
    flex-wrap: wrap; }
  .c-advisor-list__item {
    width: calc(50% - 12px);
    max-width: 100%;
    margin: 0 0 24px; }
  .c-advisor-list__item + .c-advisor-list__item {
    margin-top: 0; } }

/* ==========================================================================
   Back to top
   ========================================================================== */
.c-back-to-top {
  display: none; }

.c-back-to-top__text {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px;
  margin-top: 16px; }

.c-back-to-top__icon {
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  height: 166px; }

.c-back-to-top:hover .o-icon {
  position: absolute;
  top: 0;
  -webkit-animation-name: bounceTopBottom;
          animation-name: bounceTopBottom;
  -webkit-animation-duration: .9s;
          animation-duration: .9s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.c-back-to-top:hover .c-underline-link:before {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left; }

@media (min-width: 1200px) {
  .c-back-to-top {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-align: center;
            align-items: center;
    width: 32%; } }

/* ==========================================================================
Back link
========================================================================== */
.c-back-link {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px;
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-align: start;
          align-items: flex-start;
  color: #000000;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }
  .c-back-link:hover {
    color: #FF6352; }

.c-back-link .o-icon-wrapper {
  margin-right: 8px; }

/* ==========================================================================
   Icon btn
   ========================================================================== */
.c-icon-btn {
  padding: 0;
  font-size: inherit;
  cursor: pointer;
  color: inherit;
  border: none;
  background-color: transparent;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  font-weight: 400;
  text-align: left;
  color: #FFFFFF; }
  .c-icon-btn:focus, .c-icon-btn:active {
    outline: none; }

.c-icon-btn__icon {
  margin-right: 16px; }

@media (min-width: 768px) {
  .c-icon-btn {
    white-space: nowrap; }
  .c-icon-btn__icon {
    margin-right: 8px; } }

.c-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  padding: 16px;
  cursor: pointer;
  color: #FFFFFF;
  border: 0;
  background-color: #9078D7;
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px; }
  .c-btn:focus {
    outline: 0; }

.c-btn--fluid {
  width: 100%; }

.c-btn__icon {
  margin-left: 10px; }

.c-clear-btn {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding: 0;
  cursor: pointer;
  -webkit-transition: 250ms ease-in-out;
  transition: 250ms ease-in-out;
  text-align: left;
  border: 0;
  background-color: transparent; }
  .c-clear-btn:hover {
    opacity: .8; }
  .c-clear-btn:focus, .c-clear-btn:active {
    outline: none; }

.c-clear-btn__icon {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-top: 2px;
  margin-left: 8px; }

@media (min-width: 768px) {
  .c-clear-btn {
    height: 48px; } }

/* ==========================================================================
   Cards list
   ========================================================================== */
.c-cards-list {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: start;
          align-items: flex-start;
  margin: 0;
  padding: 0;
  list-style: none; }

.c-cards-list__item {
  width: 100%;
  margin: 48px 0 0 0;
  padding-left: 0; }

@media (min-width: 0) and (max-width: 767px) {
  .c-cards-list__item:first-child {
    margin-top: 0; } }

@media (min-width: 768px) and (min-width: 768px) {
  .c-cards-list {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    flex-wrap: wrap; } }

@media (min-width: 768px) and (min-width: 768px) {
  .c-cards-list__item {
    width: calc(50% - (8px * 1.5)); } }

@media (min-width: 768px) and (max-width: 1199px) {
  .c-cards-list__item:nth-child(-n + 2) {
    margin-top: 0; }
  .c-cards-list__item:nth-child(odd) {
    margin-right: 24px; } }

@media (min-width: 1200px) {
  .c-cards-list__item {
    width: calc(100% / 3 - ((12px * 2))); }
  .c-cards-list__item:nth-child(-n + 3) {
    margin-top: 0; }
  .c-cards-list__item:not(:nth-child(3n)) {
    margin-right: 24px; } }

/* ==========================================================================
   Controls
   ========================================================================== */
.c-controls {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding: 0 24px 24px;
  width: 100%; }

.c-controls__button {
  text-align: center;
  font-size: 13px;
  color: #FFFFFF;
  width: 18px;
  padding: 0;
  outline: 0;
  background-color: transparent;
  border: 0;
  cursor: pointer; }

.c-controls__progress {
  display: -webkit-box;
  display: flex;
  width: 100%; }

input[type=range] {
  -webkit-appearance: none;
  background: transparent; }

input[type=range]:focus {
  outline: none; }

input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 2px;
  cursor: pointer;
  background-color: rgba(255, 255, 255, 0.8); }

input[type=range]::-webkit-slider-thumb {
  height: 17px;
  width: 4px;
  margin-top: -7.5px;
  background-color: #FFFFFF;
  cursor: pointer;
  -webkit-appearance: none; }

input[type=range]::-moz-range-track {
  width: 100%;
  height: 2px;
  cursor: pointer;
  background: rgba(255, 255, 255, 0.8); }

input[type=range]::-moz-range-thumb {
  height: 17px;
  width: 4px;
  margin-top: -7.5px;
  background-color: #FFFFFF;
  cursor: pointer; }

/* ==========================================================================
   Cookies
   ========================================================================== */
.c-cookies {
  padding: 26px 0 16px; }

.c-cookies__text {
  max-width: 275px;
  margin-bottom: 16px;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

.c-cookies__actions {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: start;
          align-items: flex-start; }

.c-cookies .c-underline-link {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px; }

.c-cookies .c-underline-link + .c-underline-link {
  margin-top: 8px;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

@media (min-width: 768px) {
  .c-cookies {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between;
    padding: 26px 0; }
  .section-markup-wrapper .c-cookies {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between;
    padding: 26px 0; }
  .c-cookies__text {
    width: 100%;
    max-width: 425px;
    margin-bottom: 0; }
  .c-cookies__actions {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-pack: justify;
            justify-content: space-between; }
  .c-cookies .c-underline-link + .c-underline-link {
    margin-top: 16px; } }

@media (min-width: 1200px) {
  .c-cookies {
    padding: 45px 0 35px; }
  .section-markup-wrapper .c-cookies {
    padding: 45px 0; }
  .c-cookies__text {
    max-width: 520px; } }

/* ==========================================================================
   Count
   ========================================================================== */
.c-counter-box {
  text-align: center; }

.c-counter-box__number {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 700;
  color: #00B7B4; }

.c-counter-box__desc {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400;
  margin-top: 8px; }

.c-counter-box__desc + .c-counter-box__number {
  margin-top: 16px; }

@media (min-width: 768px) {
  .c-counter-box__number {
    font-size: 26px;
    font-weight: 500;
    line-height: 1.15385; } }
  @media (min-width: 768px) and (min-width: 768px) {
    .c-counter-box__number {
      font-size: 38px;
      line-height: 1.26316; } }
  @media (min-width: 768px) and (min-width: 1200px) {
    .c-counter-box__number {
      font-size: 48px;
      line-height: 1.16667; } }

@media (min-width: 768px) {
  .c-counter-box__desc + .c-counter-box__number {
    margin-top: 32px; } }

@media (min-width: 1200px) {
  .c-counter-box__number {
    font-size: 42px;
    font-weight: 500;
    line-height: 1.33333; } }
  @media (min-width: 1200px) and (min-width: 768px) {
    .c-counter-box__number {
      font-size: 76px;
      font-weight: 300;
      line-height: 1.05263;
      letter-spacing: -1.5px; } }
  @media (min-width: 1200px) and (min-width: 1200px) {
    .c-counter-box__number {
      font-size: 96px;
      line-height: 1.16667; } }

@media (min-width: 1200px) {
  .c-counter-box__desc + .c-counter-box__number {
    margin-top: 32px; } }

/* ==========================================================================
   Custom dropdown
   ========================================================================== */
.c-custom-dropdown {
  position: relative; }

.c-custom-dropdown__trigger {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding: 16px 0; }

.c-custom-dropdown__content {
  position: absolute;
  z-index: 1;
  top: 100%;
  right: 0;
  left: 0;
  overflow: hidden;
  max-height: 0;
  -webkit-transition: 250ms ease-in-out max-height;
  transition: 250ms ease-in-out max-height; }

.c-custom-dropdown.is-opened .c-custom-dropdown__content {
  max-height: 200px; }

.c-custom-dropdown__list {
  width: 100%;
  margin: 0;
  padding: 0;
  list-style: none;
  background-color: #F2F0F6; }

.c-custom-dropdown__list-item {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 100%; }
  .c-custom-dropdown__list-item:not(:last-child) {
    border-bottom: 2px solid #FFFFFF; }

.c-custom-dropdown__link {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  display: -webkit-box;
  display: flex;
  width: 100%;
  padding: 16px;
  cursor: pointer;
  color: #000000; }

@media (min-width: 1200px) {
  .c-custom-dropdown__link {
    -webkit-transition: 250ms ease-in-out;
    transition: 250ms ease-in-out; }
    .c-custom-dropdown__link:hover {
      text-decoration: underline; } }

/* ==========================================================================
   Data box
   ========================================================================== */
.c-data-box {
  display: -webkit-box;
  display: flex;
  margin: 0;
  width: 100%; }

.c-data-box__title,
.c-data-box__desc {
  width: 50%; }

.c-data-box__title {
  padding-right: 24px; }

.c-data-box__desc {
  margin: 0; }
  .c-data-box__desc address {
    font-style: normal; }

@media (min-width: 768px) {
  .c-data-box__desc--break {
    word-break: break-all; } }

@media (min-width: 1200px) {
  .c-data-box__title {
    padding-right: 0; }
  .c-data-box__title,
  .c-data-box__desc {
    width: 100%; } }

/* ==========================================================================
   Download box
   ========================================================================== */
.c-download-box {
  display: block;
  width: 100%;
  max-width: 184px; }

.c-download-box__media {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  margin: 0; }

.c-download-box__media img {
  display: block;
  width: auto;
  max-width: 100%;
  height: 101px; }

.c-download-box__action {
  display: -webkit-box;
  display: flex;
  width: 100%;
  margin-top: 15px; }

.c-download-box__action .c-underline-link {
  display: inline-block;
  font-weight: 300; }

.c-download-box__action .c-underline-link__icon {
  display: inline-block;
  margin-left: 0; }

@media (min-width: 1200px) {
  .c-download-box:hover .c-underline-link__text {
    background-size: 100% 100%; } }

/* ==========================================================================
   Downloads table
   ========================================================================== */
.c-downloads-table {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }

.c-downloads-table__heading {
  width: 100%;
  padding: 30px 0;
  border-bottom: 1px solid #AEA8BB; }

.c-downloads-table__heading--alt {
  display: none; }

@media (min-width: 768px) {
  .c-downloads-table__heading--alt {
    display: block; } }

/* ==========================================================================
   Downloads
   ========================================================================== */
.c-downloads {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  padding: 30px 0;
  border-bottom: 1px solid #AEA8BB; }

.c-downloads__title {
  margin-top: 0;
  margin-bottom: 14px; }

.c-downloads__date,
.c-downloads__title {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400; }

.c-downloads__info-wrapper {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }

.c-downloads__info-wrapper .c-underline-link {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px; }

.c-downloads .o-icon {
  color: #FF6352; }

.c-downloads .c-underline-link {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

.c-downloads .c-underline-link__icon {
  margin-right: 8px; }

.c-downloads__link + .c-downloads__link {
  margin-top: 8px; }

@media (min-width: 768px) {
  .c-downloads {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row; }
  .c-downloads__post-wrapper {
    display: -webkit-box;
    display: flex;
    width: 65%; }
  .c-downloads__info-wrapper {
    width: 35%; }
  .c-downloads__date {
    width: 40%; }
  .c-downloads__title {
    width: 60%;
    margin-bottom: 0; } }

@media (min-width: 1200px) {
  .c-downloads {
    -webkit-box-pack: justify;
            justify-content: space-between; }
  .c-downloads__info-wrapper {
    flex-shrink: 0;
    width: 312px; }
  .c-downloads__post-wrapper {
    width: calc(100% - 312px); }
  .c-downloads__date {
    width: 25%; }
  .c-downloads__title {
    width: 75%; } }

/* ==========================================================================
   Event box
   ========================================================================== */
.c-event-box {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  min-height: 224px;
  padding: 20px 24px 24px;
  color: #FFFFFF;
  background-color: #00B7B4; }

.c-event-box__head {
  display: block; }

.c-event-box__date,
.c-event-box__title {
  margin-bottom: 8px; }

.c-event-box__date {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 700; }

.c-event-box__title {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

.c-event-box__dropdown {
  margin-top: auto; }

@media (min-width: 768px) {
  .c-event-box {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    -webkit-box-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
            align-items: center;
    min-height: 107px;
    padding: 24px; }
  .c-event-box__date {
    font-size: 20px;
    font-weight: 500;
    line-height: 1.2;
    letter-spacing: 0.15px;
    font-weight: 400;
    margin-bottom: 8px;
    font-weight: 400; }
  .c-event-box__title {
    font-size: 20px;
    font-weight: 500;
    line-height: 1.2;
    letter-spacing: 0.15px;
    font-weight: 700; }
  .c-event-box__dropdown {
    margin-top: 0; } }

@media (min-width: 1200px) {
  .c-event-box {
    min-height: auto;
    padding: 8px 24px; }
  .c-event-box__head {
    display: -webkit-box;
    display: flex;
    -webkit-box-align: center;
            align-items: center;
    -webkit-box-flex: 1;
            flex-grow: 1; }
  .c-event-box__date {
    width: 100%;
    max-width: 204px; }
  .c-event-box__dropdown {
    flex-shrink: 0;
    width: 270px; } }

/* ==========================================================================
   Event heading
   ========================================================================== */
.c-event-heading {
  display: -webkit-box;
  display: flex; }

.c-event-heading__text {
  margin-bottom: 30px;
  font-weight: 700; }

@media (min-width: 1200px) {
  .c-event-heading__text:first-child {
    display: inline-block;
    width: calc((204px) + (8px * 3)); }
  .c-event-heading__separator {
    display: none; } }

/* ==========================================================================
   Field
   ========================================================================== */
.f-field {
  position: relative;
  width: 100%; }

.f-field:not(:first-child) {
  margin-top: 24px; }

.f-field__control {
  width: 100%;
  padding: 10px 16px 12px;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 700;
  border: 0;
  border-radius: 0;
  background-color: #F2F0F6;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }
  .f-field__control:focus {
    outline: 0; }

.f-field__control::-ms-clear {
  display: none; }

.f-field__control::-webkit-input-placeholder {
  font-weight: 700;
  color: #000000; }

.f-field__control::-moz-placeholder {
  font-weight: 700;
  color: #000000; }

.f-field__control:-ms-input-placeholder {
  font-weight: 700;
  color: #000000; }

.f-field__control::-ms-input-placeholder {
  font-weight: 700;
  color: #000000; }

.f-field__control::placeholder {
  font-weight: 700;
  color: #000000; }

.f-field__control:-moz-placeholder,
.f-field__control::-moz-placeholder {
  opacity: 1; }

.f-field__validation-icon {
  position: absolute;
  top: 20px;
  right: 20px; }

.f-field__validation-icon .o-icon {
  display: none; }

.f-field--textarea .f-field__control {
  height: 144px; }

.f-form__action {
  width: 100%;
  margin-top: 24px; }

.f-field--select {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
          flex-direction: column-reverse;
  background-color: #F2F0F6; }

.f-field--select .o-icon-wrapper {
  position: absolute;
  top: 0;
  right: 0;
  height: 50px;
  padding-right: 16px;
  color: #FF6352; }
  .f-field--select .o-icon-wrapper .o-icon {
    -webkit-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out; }

.f-field--select .select2-container--open + .o-icon-wrapper .o-icon {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg); }

.f-field--select .select2 {
  width: 100%;
  background-color: transparent;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 700; }

.f-field--select .select2-container {
  z-index: 2;
  display: -webkit-box;
  display: flex;
  width: 100%; }

.f-field--select .select2-container--open {
  z-index: 3; }

.f-field--select .select2-dropdown {
  border: none;
  border-radius: 0;
  background-color: #FFFFFF; }

.f-field--select .select2-results__option {
  padding: 10px 16px 12px;
  background-color: #F2F0F6;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400; }
  .f-field--select .select2-results__option:hover {
    text-decoration: underline; }

.f-field--select .select2-results__option {
  margin-top: 2px; }

.f-field--select .select2-selection__placeholder:focus,
.f-field--select .select2-selection__rendered:focus,
.f-field--select .select2-selection__selection:focus,
.f-field--select .select2-selection,
.f-field--select .selection:focus {
  outline: 0; }

.f-field--select .selection,
.f-field--select .select2-selection {
  display: -webkit-box;
  display: flex;
  width: 100%; }

.f-field--select .select2-selection--single {
  height: auto;
  padding: 8px 16px 12px;
  border: none;
  border-radius: 0;
  background-color: transparent; }

.f-field--select .select2-container .select2-selection--single .select2-selection__rendered {
  padding-left: 0; }

.f-field--select .select2-container--default .select2-selection--single .select2-selection__placeholder {
  color: #000000; }

.f-field--select .select2-container--default .select2-results > .select2-results__options {
  max-height: 240px; }

.f-field--select .select2-container--default .select2-results__option--highlighted[aria-selected] {
  color: inherit;
  background-color: #F2F0F6; }

.f-field--select .select2-selection__arrow,
.f-field--select .select2-selection__clear,
.section-markup-wrapper .f-field--select .select2-search.select2-search--dropdown {
  display: none; }

.f-field--select .select2-container--default .select2-selection--single .select2-selection__rendered {
  color: #000000; }

.f-field--select .select2-container--disabled {
  opacity: .8; }

.f-field--select .select2-container--disabled + .o-icon-wrapper,
.f-field--select .select2-container--default.select2-container--disabled .select2-selection--single .select2-selection__placeholder {
  color: #AEA8BB; }

.f-field--select .select2-container--default.select2-container--disabled .select2-selection--single {
  background-color: transparent; }

.f-field--select .select2-container--default .select2-results__option[aria-selected=true] {
  background-color: #E6E3EC; }

/* ==========================================================================
   Filters form
   ========================================================================== */
.f-form--filters {
  width: 100%;
  margin: 0; }

.f-form--filters .f-field:not(:first-child) {
  margin-top: 0; }

.f-form__col {
  display: -webkit-box;
  display: flex;
  width: 100%; }
  .f-form__col:not(:last-child) {
    margin-bottom: 16px; }

.f-form__col--big {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }

.f-form__col--big .f-field:not(:last-child) {
  margin-bottom: 16px; }

.f-form__title {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  height: 48px;
  border-bottom: 1px solid #AEA8BB; }

@media (min-width: 768px) {
  .f-form--filters {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between; }
  .f-form__col {
    width: calc(25% - 8px * 2); }
    .f-form__col:last-child {
      -webkit-box-pack: end;
              justify-content: flex-end; }
  .f-form__col--big {
    width: calc(50% - 8px * 2); }
  .f-form__title {
    border-bottom: 0; } }

@media (min-width: 1200px) {
  .f-form__col {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
            align-items: center;
    width: calc(25% - 8px * 2); }
    .f-form__col:not(:last-child) {
      margin-bottom: 0; }
    .f-form__col:last-child {
      -webkit-box-pack: start;
              justify-content: flex-start; }
  .f-form__col--big {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    width: calc(50% - 8px * 2); }
  .f-form__col--big .f-field {
    width: calc(50% - 8px); }
    .f-form__col--big .f-field:not(:last-child) {
      margin-bottom: 0; } }

/* ==========================================================================
   Footer list
   ========================================================================== */
.c-footer-list {
  list-style: none;
  margin: 0;
  padding: 0; }

.c-footer-list--alt {
  -webkit-column-count: 2;
  -moz-column-count: 2;
  column-count: 2; }

.c-footer-list__item {
  color: #FFFFFF; }

.c-footer-list__item .c-underline-link {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px; }

.c-footer-list__item span {
  position: relative; }

.c-footer-list__item span:hover:after {
  position: absolute;
  display: block;
  content: '';
  left: 0;
  width: 0;
  bottom: -2px;
  height: 1px;
  background-color: #FF6352;
  -webkit-animation-name: zeroToFullWidth;
          animation-name: zeroToFullWidth;
  -webkit-animation-duration: .5s;
          animation-duration: .5s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

@media (min-width: 768px) {
  .c-footer-list--alt {
    -webkit-column-count: 3;
    -moz-column-count: 3;
    column-count: 3; } }

@media (min-width: 1200px) {
  .c-footer-list--alt {
    -webkit-column-count: 2;
    -moz-column-count: 2;
    column-count: 2; } }

/* ==========================================================================
   Footer
   ========================================================================== */
.c-footer {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  width: 100%;
  padding-top: 32px;
  padding-bottom: 32px;
  margin: 0;
  background-color: #241E31; }

.c-footer__heading {
  color: #FF6352;
  font-size: 14px;
  font-weight: 700;
  line-height: 1.71429;
  letter-spacing: 0.1px; }

.c-footer__col {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }

.c-footer__col--narrow + .c-footer__col--wide {
  margin-top: 55px; }

.c-footer__media-wrapper {
  -webkit-box-flex: 1;
          flex-grow: 1;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: end;
          align-items: flex-end;
  padding-top: 16px; }

@media (min-width: 768px) {
  .c-footer {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row; }
  .c-footer__col--narrow + .c-footer__col--wide {
    margin-top: 0; }
  .c-footer__col--narrow {
    width: 33.33333%; }
  .c-footer__col--wide {
    width: 66.66667%; }
  .c-footer__media-wrapper {
    padding-top: 0; } }

@media (min-width: 1200px) {
  .c-footer {
    align-self: flex-end;
    padding: 55px 0 55px 32%;
    width: 100%;
    z-index: 0; } }

/* ==========================================================================
   Form
   ========================================================================== */
.f-form {
  width: 100%; }

.f-form--validation .parsley-errors-list.filled {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 12px;
  font-weight: 400;
  line-height: 1.33333;
  letter-spacing: 0.5px;
  margin-top: 8px;
  color: #FF6352;
  max-width: 249px; }

.f-form--validation .parsley-success + .o-icon-wrapper .o-icon--tick,
.f-form--validation .parsley-error + .o-icon-wrapper .o-icon--error {
  display: block; }

@media (min-width: 768px) {
  .f-form--validation .parsley-errors-list.filled {
    max-width: 100%; } }

/* ==========================================================================
   Form info
   ========================================================================== */
.section-markup-wrapper .c-form-info--success {
  display: -webkit-box;
  display: flex; }

.c-form-info {
  display: none;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center; }

.c-form-info.is-visible {
  display: -webkit-box;
  display: flex; }

.c-form-info__icon {
  margin-bottom: 24px; }

.c-form-info__heading {
  margin-bottom: 12px; }

.c-form-info__desc {
  margin-bottom: 20px;
  text-align: center; }

@media (min-width: 768px) {
  .c-form-info__desc {
    margin-bottom: 45.6px; } }

/* ==========================================================================
   Hamburger icon
   ========================================================================== */
.c-hamburger {
  position: relative;
  z-index: 60;
  display: block;
  width: 23px;
  height: 18px;
  padding: 0;
  transition: transform 0.6s cubic-bezier(0.165, 0.84, 0.44, 1), -webkit-transform 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
  pointer-events: all;
  border: 0;
  border-radius: 0;
  background-color: transparent; }
  .c-hamburger:focus, .c-hamburger:active {
    outline: none; }

.c-hamburger__line {
  position: absolute;
  top: 50%;
  right: 0;
  left: 0;
  width: auto;
  height: 2px;
  margin-top: -1px;
  transition: transform 0.6s cubic-bezier(0.165, 0.84, 0.44, 1), opacity 0.3s cubic-bezier(0.165, 0.84, 0.44, 1), background-color 0.6s cubic-bezier(0.165, 0.84, 0.44, 1), -webkit-transform 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
  background-color: #000000; }
  .c-hamburger__line:nth-child(2) {
    -webkit-transform: translateY(-6px);
            transform: translateY(-6px); }
  .c-hamburger__line:nth-child(3) {
    -webkit-transform: scaleX(0.8);
            transform: scaleX(0.8);
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%; }
  .c-hamburger__line:nth-child(4) {
    -webkit-transform: translateY(6px);
            transform: translateY(6px); }

@media (min-width: 1200px) {
  .c-hamburger:hover .c-hamburger__line:nth-child(3) {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); } }

.c-hamburger__line--hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.is-menu-opened .c-hamburger {
  -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg); }

.is-menu-opened .c-hamburger__line {
  background-color: #FFFFFF; }

.is-menu-opened .c-hamburger__line:nth-child(2) {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg); }

.is-menu-opened .c-hamburger__line:nth-child(3) {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
  opacity: 0; }

.is-menu-opened .c-hamburger__line:nth-child(4) {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg); }

@media (min-width: 1200px) {
  .c-hamburger {
    display: none; }
  .section-markup-wrapper .c-hamburger {
    display: block; }
  .section-markup-wrapper .is-menu-opened .c-hamburger__line {
    background-color: #000000; } }

/* ==========================================================================
   Header
   ========================================================================== */
.c-header {
  width: 100%; }

.c-header__action {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  height: 70px;
  padding: 24px 0;
  color: #FF6352; }

.c-header__main {
  width: 100%; }

.c-header__controls {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  width: 200%; }

.c-header__search {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-top: 90px;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
  opacity: 1; }

.is-sub-nav-opened .c-header__search {
  -webkit-transition: all .3s ease-in-out .1s;
  transition: all .3s ease-in-out .1s;
  opacity: 0; }

.c-header__nav-wrapper {
  width: 50%;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

@media (min-width: 0) and (max-width: 1199px) {
  .c-header {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    height: 100%; }
  .is-menu-opened .c-header__action {
    color: #FFFFFF; }
  .c-header__action {
    position: relative;
    z-index: 2;
    flex-shrink: 0; }
  .c-header__main {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-flex: 1;
            flex-grow: 1;
    padding: 32px 0 24px 0;
    color: #FFFFFF; }
  .c-header__nav-wrapper {
    padding: 0 24px; }
  .is-sub-nav-opened .c-header__nav-wrapper {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@media (min-width: 768px) and (max-width: 1199px) {
  .c-header__main {
    padding: 96px 0 24px 0; } }

@media (min-width: 1200px) {
  .c-header {
    display: -webkit-box;
    display: flex;
    -webkit-box-align: center;
            align-items: center;
    width: 100%; }
  .c-header__action {
    width: 260px;
    height: auto;
    padding: 0; }
  .c-header__main {
    display: -webkit-box;
    display: flex;
    width: calc(100% - 260px); }
  .c-header__controls {
    width: 100%;
    padding: 0; }
  .c-header__nav-wrapper {
    display: -ms-grid;
    display: grid;
    width: 100%;
    height: 100%;
    grid-area: header-main;
        grid-template-areas: 'header-nav header-search';
    -ms-grid-columns: 1fr 152px;
    grid-template-columns: 1fr 152px;
    -ms-grid-rows: auto;
    grid-template-rows: auto; }
  .c-header__nav {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: center;
            align-items: center;
    width: 100%;
    padding: 0 16px;
    grid-area: header-nav; }
  .c-header__search {
    grid-area: header-search; }
  .c-header__social-media {
    display: none; }
  .c-header__search {
    -webkit-box-pack: end;
            justify-content: flex-end;
    margin-top: 0; } }

@media (min-width: 1200px) {
  .c-header__nav {
    -ms-grid-row: 1;
    -ms-grid-column: 1; }
  .c-header__search {
    -ms-grid-row: 1;
    -ms-grid-column: 2; } }

/* ==========================================================================
   Heading
   ========================================================================== */
.c-heading {
  width: 100%; }

.c-heading--alt {
  display: -webkit-box;
  display: flex; }

.c-heading--alt .c-heading__date,
.c-heading--alt .c-heading__news {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px; }

.c-heading__title {
  font-weight: 400;
  color: #FF6352; }

.c-heading--small .c-heading__title {
  color: #000000; }

.c-heading__subtitle {
  margin-top: 24px;
  color: #000000; }

@media (min-width: 768px) {
  .c-heading--alt {
    width: 65%; }
  .c-heading--alt .c-heading__date {
    width: 40%; }
  .c-heading--alt .c-heading__news {
    width: 60%; } }

@media (min-width: 1200px) {
  .c-heading--alt {
    width: calc(100% - 312px); }
  .c-heading--alt .c-heading__date {
    width: 25%; }
  .c-heading--alt .c-heading__news {
    width: 75%; } }

/* ==========================================================================
   Icon with decor
   ========================================================================== */
.c-icon-with-decor {
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  flex-shrink: 0;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background-color: #FFFFFF; }

.c-icon-with-decor--light {
  background-color: #F2F0F6;
  color: #AEA8BB; }

.c-social-media__list .c-icon-with-decor--light .o-icon {
  fill: currentColor; }

@media (min-width: 1200px) {
  .c-icon-with-decor--alt-dark {
    color: #FFFFFF;
    background-color: #241E31; } }

/* ==========================================================================
iFrame
========================================================================== */
.c-iframe {
  width: 100%;
  border: none; }

.c-iframe--pad {
  padding: 22px 24px; }

/* ==========================================================================
   Info
   ========================================================================== */
.c-info h4:not([class]) + h5:not([class]) {
  margin-top: 8px; }

.c-info h4:not([class]) + h6:not([class]) {
  margin-top: 8px; }

.c-info h5:not([class]) + h4:not([class]) {
  margin-top: 46px; }

.c-info h5:not([class]) + h5:not([class]) {
  margin-top: 24px; }

.c-info h5:not([class]) + p:not([class]) {
  margin-top: 8px; }

.c-info h6:not([class]) + p:not([class]) {
  margin-top: 0; }

.c-info p:not([class]) + h4:not([class]) {
  margin-top: 46px; }

.c-info p:not([class]) + h5:not([class]) {
  margin-top: 24px; }

.c-info p:not([class]) + h6:not([class]) {
  margin-top: 54px; }

.c-info p a:not(:first-of-type) {
  margin-top: 8px; }

.c-info a {
  position: relative;
  display: -webkit-inline-box;
  display: inline-flex; }

.c-info h5 a {
  font: inherit;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  text-decoration: underline;
  word-break: break-all;
  color: #FF6352; }

@media (min-width: 768px) {
  .c-info h5 a {
    word-break: unset; } }

/* ==========================================================================
   Info teaser
   ========================================================================== */
.c-info-teaser {
  max-width: 907px;
  padding: 30px 0 80px; }

.c-info-teaser__heading {
  color: #FF6352; }

.c-info-teaser__heading .c-wysiwyg h2 {
  font-weight: 400; }

.c-info-teaser__link {
  margin-top: 24px; }

@media (min-width: 768px) {
  .c-info-teaser {
    padding: 50px 0 80px; }
  .c-info-teaser__link {
    margin-top: 32px; } }

@media (min-width: 1200px) {
  .c-info-teaser {
    padding: 60px 0 80px; } }

/* ==========================================================================
   Info window
   ========================================================================== */
.c-info-window {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
          flex-direction: column-reverse;
  width: 100%; }

.c-info-window__col {
  position: relative;
  width: 100%; }

@media (min-width: 768px) {
  .c-info-window {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    width: 662px; }
  .c-info-window__col {
    display: -webkit-box;
    display: flex;
    width: 50%; } }

/* ==========================================================================
   List
   ========================================================================== */
.c-list {
  margin: 0;
  padding: 0;
  list-style: none;
  width: 100%; }

.c-list--column-wrap {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column; }

.c-list--column-wrap .c-list__item:not(:last-child) {
  margin-bottom: 16px; }

.c-list__item {
  display: block; }

.c-newsfeed .c-list .c-list__item:not(:last-child) {
  margin-bottom: 16px; }

.c-newsfeed--invert-colors .c-list .c-list__item:not(:last-child) {
  margin-bottom: 32px; }

.c-list--big-spacing .c-list__item {
  border-bottom: 0; }
  .c-list--big-spacing .c-list__item:not(:last-child) {
    margin-bottom: 56px; }

.c-list--load-more .c-list__item:nth-child(n + 11) {
  display: none; }

.c-list--load-more .c-list__item.is-visible {
  display: block;
  -webkit-animation: SlideDown .3s linear;
          animation: SlideDown .3s linear;
  background-color: #fff; }

.c-list--big-spacing .c-list__item:nth-child(n + 11) {
  display: block; }

.c-list__decor {
  border-bottom: 1px solid #D8D8D8; }

.c-list__item:first-child .c-list__decor {
  border-top: 1px solid #D8D8D8; }

@media (min-width: 768px) {
  .c-list--horizontal {
    display: -webkit-box;
    display: flex;
    -webkit-box-align: center;
            align-items: center; } }

@media (min-width: 1200px) {
  .c-list--column-wrap {
    display: -ms-grid;
    display: grid;
    grid-auto-flow: column;
    grid-gap: 16px;
    -ms-grid-columns: (1fr)[3];
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-rows: (auto)[4];
    grid-template-rows: repeat(4, auto); }
  .c-list--column-wrap .c-list__item:nth-child(1) {
    -ms-grid-column: 1;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(2) {
    -ms-grid-column: 1;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(3) {
    -ms-grid-column: 1;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(4) {
    -ms-grid-column: 1;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(5) {
    -ms-grid-column: 2;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(6) {
    -ms-grid-column: 2;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(7) {
    -ms-grid-column: 2;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(8) {
    -ms-grid-column: 2;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(9) {
    -ms-grid-column: 3;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(10) {
    -ms-grid-column: 3;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(11) {
    -ms-grid-column: 3;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(12) {
    -ms-grid-column: 3;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(13) {
    -ms-grid-column: 4;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(14) {
    -ms-grid-column: 4;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(15) {
    -ms-grid-column: 4;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(16) {
    -ms-grid-column: 4;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(17) {
    -ms-grid-column: 5;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(18) {
    -ms-grid-column: 5;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(19) {
    -ms-grid-column: 5;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(20) {
    -ms-grid-column: 5;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(21) {
    -ms-grid-column: 6;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(22) {
    -ms-grid-column: 6;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(23) {
    -ms-grid-column: 6;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(24) {
    -ms-grid-column: 6;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(25) {
    -ms-grid-column: 7;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(26) {
    -ms-grid-column: 7;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(27) {
    -ms-grid-column: 7;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(28) {
    -ms-grid-column: 7;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(29) {
    -ms-grid-column: 8;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(30) {
    -ms-grid-column: 8;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(31) {
    -ms-grid-column: 8;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(32) {
    -ms-grid-column: 8;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(33) {
    -ms-grid-column: 9;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(34) {
    -ms-grid-column: 9;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(35) {
    -ms-grid-column: 9;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(36) {
    -ms-grid-column: 9;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(37) {
    -ms-grid-column: 10;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(38) {
    -ms-grid-column: 10;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(39) {
    -ms-grid-column: 10;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(40) {
    -ms-grid-column: 10;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(41) {
    -ms-grid-column: 11;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(42) {
    -ms-grid-column: 11;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(43) {
    -ms-grid-column: 11;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(44) {
    -ms-grid-column: 11;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:nth-child(45) {
    -ms-grid-column: 12;
    -ms-grid-row: 1; }
  .c-list--column-wrap .c-list__item:nth-child(46) {
    -ms-grid-column: 12;
    -ms-grid-row: 2; }
  .c-list--column-wrap .c-list__item:nth-child(47) {
    -ms-grid-column: 12;
    -ms-grid-row: 3; }
  .c-list--column-wrap .c-list__item:nth-child(48) {
    -ms-grid-column: 12;
    -ms-grid-row: 4; }
  .c-list--column-wrap .c-list__item:not(:last-child) {
    margin-bottom: 0; } }

@media screen and (min-width: 1200px) and (-ms-high-contrast: active), screen and (min-width: 1200px) and (-ms-high-contrast: none) {
  .c-list--column-wrap .c-list__item {
    margin-bottom: 16px;
    margin-right: 16px; }
  .c-list--column-wrap .c-list__item:not(:last-child) {
    margin-bottom: 16px; } }

@media (min-width: 1200px) {
  .c-list .c-list__item--desktop-hidden {
    display: none; } }

.c-list--horizontal-wrap {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  width: calc(100% + (8px * 4));
  margin-top: -24px;
  margin-right: -16px;
  margin-left: -16px; }

.c-list--half-width.c-list--horizontal-wrap {
  margin-bottom: -24px; }

.c-list--horizontal-wrap .c-list__item {
  width: calc(100% - (8px * 4));
  margin: 24px 16px; }

@media (min-width: 768px) {
  .c-list--horizontal-wrap .c-list__item {
    width: calc((100% / 2) - (8px * 4)); }
  .c-list--half-width.c-list--horizontal-wrap .c-list__item {
    width: calc(100% - (8px * 4)); } }

@media (min-width: 1200px) {
  .c-list--horizontal-wrap .c-list__item {
    width: calc((100% / 3) - (8px * 6)); }
  .l-callouts .c-list--horizontal-wrap {
    margin-top: -32px; }
  .c-list--half-width.c-list--horizontal-wrap .c-list__item {
    width: calc((100% / 2) - (8px * 4)); }
  .l-callouts .c-list--horizontal-wrap .c-list__item {
    width: calc((100% / 2) - (8px * 4)); }
  .l-callouts .c-list--three-columns .c-list__item {
    width: calc((100% / 3) - (8px * 4)); } }

/* ==========================================================================
   Loader
   ========================================================================== */
.c-loader {
  position: relative;
  display: none;
  width: 64px;
  height: 64px;
  margin-bottom: 32px; }

.is-loading .c-loader {
  display: inline-block; }

.c-loader__item {
  position: absolute;
  display: block;
  box-sizing: border-box;
  width: 51px;
  height: 51px;
  margin: 6px;
  -webkit-animation: Loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
          animation: Loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border: 6px solid #FF6352;
  border-color: #FF6352 transparent transparent transparent;
  border-radius: 50%; }

.c-loader__item:nth-child(1) {
  -webkit-animation-delay: -.45s;
          animation-delay: -.45s; }

.c-loader__item:nth-child(2) {
  -webkit-animation-delay: -.3s;
          animation-delay: -.3s; }

.c-loader__item:nth-child(3) {
  -webkit-animation-delay: -.15s;
          animation-delay: -.15s; }

/* ==========================================================================
   Logos
   ========================================================================== */
.c-logo {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  cursor: pointer;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  color: #FF6352; }

@media (min-width: 0) and (max-width: 1199px) {
  .is-menu-opened .c-logo {
    color: #FFFFFF; } }

@media (min-width: 1200px) {
  .c-logo {
    max-width: unset;
    margin: 0;
    padding: 0; }
    .c-logo:hover {
      opacity: .8; } }

/* ==========================================================================
   Logos bar
   ========================================================================== */
.c-logos-bar {
  width: 100%;
  padding: 24px 0; }

.c-logos-bar .c-list--horizontal {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center; }

.c-logos-bar .c-list__item {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  max-width: 160px;
  height: auto;
  max-height: 110px; }

.c-logos-bar .c-list__item + .c-list__item {
  margin-left: 24px; }

.c-logos-bar__media {
  height: 100%;
  margin: 0; }

.c-logos-bar__img {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto; }

@media (min-width: 1200px) {
  .c-logos-bar .c-list--horizontal {
    -webkit-box-pack: center;
            justify-content: center; } }

/* ==========================================================================
   Map
   ========================================================================== */
.c-map {
  position: relative;
  width: 100%; }

.c-map__main {
  width: 100%;
  padding-top: 62.6%; }

.c-map__legend {
  width: 100%;
  margin-top: 8px; }

.c-map__popup {
  display: none; }

.c-map__popup.is-opened {
  position: fixed;
  z-index: 101;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: block;
  overflow: auto;
  max-height: 100vh;
  padding: 0 24px;
  background-color: #FFFFFF; }

.c-map__popup__close {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 24px;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  width: 48px;
  height: 48px;
  padding: 0;
  color: #FFFFFF;
  border: 0;
  background-color: transparent; }
  .c-map__popup__close:focus, .c-map__popup__close:active {
    outline: none; }

.c-map__popup__close .o-icon {
  font-size: 18px; }

.gm-style .gm-style-iw-c {
  overflow: visible !important;
  max-width: 100% !important;
  max-height: auto !important;
  padding: 0 !important; }

.gm-style .gm-style-iw-d {
  overflow: visible !important;
  max-width: 100% !important;
  max-height: auto !important; }

.gm-ui-hover-effect {
  top: 0 !important;
  right: 0 !important; }

.gm-style .gm-style-iw-t::after,
.gm-control-active.gm-fullscreen-control,
.gmnoprint .gm-svpc,
.gmnoprint .gm-style-mtc {
  display: none; }

.gmnoprint.gm-bundled-control.gm-bundled-control-on-bottom .gmnoprint {
  top: 0px !important; }

@media (min-width: 768px) {
  .c-map__legend {
    position: absolute;
    right: 0;
    bottom: 0;
    width: auto;
    margin-top: 0; }
  .c-map__popup__close {
    display: none; } }

/* ==========================================================================
   Marker box
   ========================================================================== */
.c-marker-box {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding: 16px 0; }

.c-marker-box__icon {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-right: 8px; }

.c-marker-box__icon .o-icon {
  font-size: 24px;
  fill: #9078D7; }

.c-marker-box__small-marker {
  width: 14px;
  height: 14px;
  border-radius: 100%;
  background-color: #FF6352; }

@media (min-width: 768px) {
  .c-marker-box {
    padding: 16px; }
  .c-marker-box__icon .o-icon {
    font-size: 42px; }
  .c-marker-box__small-marker {
    width: 24px;
    height: 24px; } }

/* ==========================================================================
   Modal
   ========================================================================== */
.c-modal {
  position: fixed;
  z-index: 101;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  opacity: 0; }

.c-modal--search {
  display: none; }

.c-modal.is-opened {
  -webkit-transform: translateY(0);
          transform: translateY(0);
  opacity: 1; }

.c-modal__content {
  background-color: #FFFFFF;
  height: 100%;
  overflow-y: auto; }

.c-modal__head {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  max-width: 1440px;
  height: 160px;
  margin: 0 auto;
  padding-right: 56px;
  padding-left: 56px; }

.c-modal__close .o-icon--cross {
  font-size: 18px;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }
  .c-modal__close .o-icon--cross:hover {
    opacity: .8; }

.c-modal__body {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  padding: 170px 0;
  padding-right: 56px;
  padding-left: 56px; }

@media (min-width: 1200px) {
  .c-modal--search {
    display: block; } }

/* ==========================================================================
   Nav
   ========================================================================== */
.c-nav {
  width: 100%; }

.c-nav__list {
  width: 100%;
  margin: 0;
  padding: 0;
  list-style: none; }

.c-nav__item {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center; }

.is-menu-opened .c-nav__item {
  -webkit-transform: translate3d(-100%, 0, 0);
          transform: translate3d(-100%, 0, 0);
  -webkit-animation: SlideIn 100ms linear;
          animation: SlideIn 100ms linear;
  opacity: 1;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

.c-nav__link {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center; }

.c-nav__name {
  font-size: 22px;
  font-weight: 500;
  line-height: 1.13636;
  letter-spacing: 0.25px; }
  @media (min-width: 768px) {
    .c-nav__name {
      font-size: 34px;
      line-height: 1.17647; } }

.c-nav__icon {
  display: none; }

.c-nav__item:nth-child(1n) {
  -webkit-animation-delay: 100ms;
          animation-delay: 100ms; }

.c-nav__item:nth-child(2n) {
  -webkit-animation-delay: 200ms;
          animation-delay: 200ms; }

.c-nav__item:nth-child(3n) {
  -webkit-animation-delay: 300ms;
          animation-delay: 300ms; }

.c-nav__item:nth-child(4n) {
  -webkit-animation-delay: 400ms;
          animation-delay: 400ms; }

.c-nav__item:nth-child(5n) {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms; }

.c-nav__item:nth-child(6n) {
  -webkit-animation-delay: 600ms;
          animation-delay: 600ms; }

.c-nav__item:nth-child(7n) {
  -webkit-animation-delay: 700ms;
          animation-delay: 700ms; }

.c-nav__item:nth-child(8n) {
  -webkit-animation-delay: 800ms;
          animation-delay: 800ms; }

.c-nav__item:nth-child(9n) {
  -webkit-animation-delay: 900ms;
          animation-delay: 900ms; }

.c-nav__item:nth-child(10n) {
  -webkit-animation-delay: 1000ms;
          animation-delay: 1000ms; }

.c-nav__item .c-underline-link {
  text-align: center;
  color: #FFFFFF;
  font-size: 22px;
  font-weight: 500;
  line-height: 1.13636;
  letter-spacing: 0.25px; }
  @media (min-width: 768px) {
    .c-nav__item .c-underline-link {
      font-size: 34px;
      line-height: 1.17647; } }

@media (min-width: 0) and (max-width: 1199px) {
  .c-nav__item {
    position: relative; }
    .c-nav__item:not(:last-child) {
      margin-bottom: 16px; } }

@media (min-width: 1200px) {
  .c-nav__list {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: justify;
            justify-content: space-between;
    -webkit-box-align: center;
            align-items: center;
    margin: 0;
    padding: 0;
    list-style: none; }
  .c-nav__item {
    position: relative;
    height: 112px; }
    .c-nav__item:after {
      position: absolute;
      bottom: -1px;
      left: 50%;
      content: '';
      -webkit-transition: 250ms ease-in-out;
      transition: 250ms ease-in-out;
      -webkit-transform: translateX(-50%) translateX(-8px);
              transform: translateX(-50%) translateX(-8px);
      border-width: 0;
      border-style: solid;
      border-color: transparent transparent #E6E3EC transparent; }
  .is-not-sticky-header.is-sub-nav-opened .c-nav__item:after {
    bottom: 0; }
  .c-nav__item.is-opened:after {
    border-width: 12px; }
  .c-nav__name {
    position: relative;
    padding: 4px 0;
    font-size: 14px;
    font-weight: 400;
    line-height: 1.71429;
    letter-spacing: 0.25px; }
    .c-nav__name:after {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      height: 2px;
      content: '';
      -webkit-transition: -webkit-transform 0.3s ease;
      transition: -webkit-transform 0.3s ease;
      transition: transform 0.3s ease;
      transition: transform 0.3s ease, -webkit-transform 0.3s ease;
      -webkit-transform: scaleX(0);
              transform: scaleX(0);
      -webkit-transform-origin: bottom right;
              transform-origin: bottom right;
      background-color: #AEA8BB; }
  .c-nav__item.is-opened .c-nav__name:after,
  .c-nav__item.is-active .c-nav__name:after,
  .c-nav__name:hover:after {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left; }
  .c-nav__icon {
    display: -webkit-inline-box;
    display: inline-flex;
    margin-left: 8px; }
  .c-nav__item .c-nav__icon .o-icon {
    -webkit-transition: 250ms ease-in-out;
    transition: 250ms ease-in-out; }
  .c-nav__item.is-opened .c-nav__icon .o-icon {
    -webkit-transform: rotate(180deg);
            transform: rotate(180deg); }
  .c-nav__item:not(:last-child) {
    margin-right: 16px; }
  .c-nav__item .c-underline-link {
    color: #000000;
    font-size: 14px;
    font-weight: 400;
    line-height: 1.71429;
    letter-spacing: 0.25px; } }

/* ==========================================================================
   News card
   ========================================================================== */
.c-news-card {
  width: 100%;
  cursor: pointer; }

.c-news-card__media {
  position: relative;
  overflow: hidden;
  width: 100%;
  margin: 0;
  padding-top: 57%;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.c-news-card__media img {
  position: absolute;
  top: 50%;
  right: 0;
  left: 0;
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }

.c-news-card__date {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 12px;
  font-weight: 400;
  line-height: 1.33333;
  letter-spacing: 0.5px;
  display: block;
  margin-top: 8px; }

.c-news-card__title {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  margin-top: 8px;
  font-weight: 700; }

.c-news-card__info {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

@media (min-width: 768px) {
  .c-news-card__date {
    margin-top: 16px; } }

@media (min-width: 1200px) {
  .c-news-card:hover .c-news-card__media {
    opacity: .5; } }

/* ==========================================================================
   Newsfeed
   ========================================================================== */
.c-newsfeed {
  width: 100%;
  padding: 24px;
  color: #FFFFFF;
  background-color: #241E31; }

.c-newsfeed--invert-colors {
  color: #241E31;
  background-color: #FFFFFF; }

.c-newsfeed--no-padding {
  padding: 0; }

.c-newsfeed__heading {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  margin-bottom: 40px; }

@media (min-width: 768px) {
  .c-newsfeed__content {
    margin-bottom: 60px; } }

/* ==========================================================================
   Oddity
   ========================================================================== */
.c-oddity {
  width: 100%;
  padding: 24px;
  color: #FFFFFF;
  background-color: #FF6352; }

.c-oddity--headquarter {
  background-color: #9078D7; }

.c-oddity__label {
  margin-bottom: 4px; }

/* ==========================================================================
   Office info
   ========================================================================== */
.c-office-info {
  width: 100%;
  color: #000000; }
  .c-office-info:not(:last-child) {
    margin-bottom: 24px; }

.c-info-window .c-office-info {
  -webkit-box-flex: 1;
          flex-grow: 1;
  padding: 24px;
  background-color: #FFFFFF; }

.c-office-info__location {
  margin-bottom: 8px; }

.c-office-info__type {
  margin-bottom: 8px; }

.c-office-info__address {
  font-style: normal; }

.c-office-info__address + .c-office-info__contact {
  margin-top: 24px; }

.c-office-info__contact:not(:last-child) {
  margin-bottom: 8px; }

.c-office-info__contact a {
  -webkit-transition: 250ms ease-in-out;
  transition: 250ms ease-in-out; }
  .c-office-info__contact a:hover {
    color: #FF6352; }

/* ==========================================================================
   Offices
   ========================================================================== */
.c-offices {
  width: 100%; }

.c-offices__heading {
  width: 100%;
  margin-bottom: 8px;
  color: #000000; }

.c-offices__body {
  width: 100%; }

.c-offices__headquarters,
.c-offices__additional {
  width: 100%; }

.c-offices__additional {
  margin-top: 48px; }

@media (min-width: 768px) {
  .c-offices__body {
    display: -webkit-box;
    display: flex; }
  .c-offices__headquarters {
    width: 50%; }
  .c-offices__additional {
    width: 50%;
    margin-top: 0; } }

@media (min-width: 1200px) {
  .c-offices__headquarters {
    width: 33.33333%; }
  .c-offices__additional {
    width: 66.66667%; } }

/* ==========================================================================
   Play
   ========================================================================== */
.c-play {
  display: -webkit-inline-box;
  display: inline-flex;
  flex-shrink: 0;
  position: absolute;
  top: -77px;
  left: 24px; }

.c-play__button {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  width: 40px;
  height: 40px;
  margin-right: 11px;
  border: 1px solid #FFFFFF;
  border-radius: 50%; }

.c-play__text {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: center;
          justify-content: center;
  color: #FFFFFF; }

.c-play__text span {
  position: relative;
  margin-left: 14px; }

.c-play__text span:before {
  position: absolute;
  display: block;
  content: '';
  bottom: 1px;
  left: -7px;
  height: 13px;
  width: 1px;
  background-color: #FFFFFF; }

.c-play .o-icon-wrapper {
  margin-left: 4px; }

.c-play .o-icon--triangle-large {
  color: #FFFFFF; }

@media (min-width: 768px) {
  .c-play {
    position: relative;
    top: 0;
    left: 0; } }

@media (min-width: 1200px) {
  .c-play:hover .c-play__button {
    background-color: #FFFFFF; }
  .c-play:hover .o-icon--triangle-large {
    color: #9078D7; } }

/* ==========================================================================
   Person card
   ========================================================================== */
.c-person-card {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: start;
          align-items: flex-start;
  width: 100%; }

.c-person-card__media {
  width: 100%;
  margin: 0;
  margin-bottom: 8px; }

.c-person-card__media img {
  width: 100%;
  max-width: 100%;
  height: auto; }

.c-person-card__title {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  margin: 0;
  font-weight: 700;
  color: #FF6352; }

.c-person-card__subtitle {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400;
  margin: 0 0 8px; }

.c-person-card__details {
  overflow: hidden;
  width: 100%;
  max-height: 0;
  -webkit-transition: all .8s ease-in-out;
  transition: all .8s ease-in-out;
  opacity: .2; }

.c-person-card.is-opened .c-person-card__details {
  max-height: 1000px;
  opacity: 1; }

.c-person-card__action {
  width: 100%; }

.c-person-card__action .c-underline-link {
  font-family: "Rawline", "Arial", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.14286;
  letter-spacing: 0.5px; }

.c-person-card__info {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px;
  margin-bottom: 12px; }

@media (min-width: 768px) {
  .c-person-card__media {
    margin-bottom: 20px; }
  .c-person-card__subtitle {
    margin: 0 0 12px; } }

@media (min-width: 1200px) {
  .c-person-card__info {
    margin-top: 12px; } }

/* ==========================================================================
   Footer list
   ========================================================================== */
.c-policy-list {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  list-style: none; }

.c-policy-list__item {
  position: relative; }
  .c-policy-list__item:not(:last-child) {
    padding-right: 10px;
    margin-right: 10px; }

.c-policy-list__item .c-underline-link {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px; }

.c-policy-list__item:not(:last-child):after {
  position: absolute;
  top: 9px;
  right: 0;
  display: block;
  width: 1px;
  height: 50%;
  content: '';
  background-color: #FFFFFF; }

.c-policy-list + .c-social-media--alt {
  margin-top: 32px; }

/* ==========================================================================
   Pop Up
   ========================================================================== */
.c-popup {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  padding: 24px 32px 80px;
  background-color: #FFFFFF;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2); }

.c-popup__close {
  align-self: flex-end;
  margin-bottom: 60px;
  cursor: pointer; }

.c-popup__cta .c-underline__link {
  color: #000000; }

@media (min-width: 768px) {
  .c-popup {
    padding: 24px 32px 0;
    min-height: 386px; }
  .c-popup__desc {
    margin-bottom: 33.6px; } }

@media (min-width: 1200px) {
  .c-popup {
    min-height: 490px;
    max-width: 870px;
    margin: 0; } }

/* ==========================================================================
   Quick link
   ========================================================================== */
.c-quick-link {
  width: 100%;
  max-width: 424px; }

.c-quick-link__title {
  color: currentColor;
  font-size: 22px;
  font-weight: 500;
  line-height: 1.13636;
  letter-spacing: 0.25px; }
  @media (min-width: 768px) {
    .c-quick-link__title {
      font-size: 34px;
      line-height: 1.17647; } }

.c-quick-link__desc {
  margin-top: 8px;
  color: #000000;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

.c-quick-link__action {
  width: 100%;
  margin-top: 16px;
  color: #000000; }

/* ==========================================================================
   Quote
   ========================================================================== */
.c-quote {
  position: relative;
  width: 100%;
  font-family: "Rawline", "Arial", sans-serif;
  max-width: 648px; }

.c-quote__author,
.c-quote__position,
.c-quote__action {
  color: #000000; }

.c-quote__quotation {
  position: relative;
  margin-top: 8px; }
  .c-quote__quotation:before, .c-quote__quotation:after {
    font-size: 26px;
    font-weight: 500;
    line-height: 1.15385;
    position: absolute;
    font-family: "Rawline", "Arial", sans-serif;
    color: currentColor; }
    @media (min-width: 768px) {
      .c-quote__quotation:before, .c-quote__quotation:after {
        font-size: 38px;
        line-height: 1.26316; } }
    @media (min-width: 1200px) {
      .c-quote__quotation:before, .c-quote__quotation:after {
        font-size: 48px;
        line-height: 1.16667; } }
  .c-quote__quotation:before {
    top: 0;
    left: -12px;
    content: open-quote; }
  .c-quote__quotation:after {
    bottom: 0;
    content: close-quote; }

.c-quote__action {
  width: 100%;
  margin-top: 8px; }

@media (min-width: 768px) {
  .c-quote__quotation:before {
    left: -24px; } }

@media (min-width: 1200px) {
  .c-quote {
    padding-left: 24px; }
  .c-quote__action {
    margin-top: 24px; } }

/* ==========================================================================
   Read more btn
   ========================================================================== */
.c-read-more-btn {
  padding: 0;
  font-size: inherit;
  cursor: pointer;
  color: inherit;
  border: none;
  background-color: transparent;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: baseline;
          align-items: baseline;
  padding: 4px 0;
  cursor: pointer;
  border: 0; }
  .c-read-more-btn:focus, .c-read-more-btn:active {
    outline: none; }

.c-read-more-btn__span:nth-child(1) {
  display: block; }

.c-read-more-btn__span:nth-child(2) {
  display: none; }

.c-person-card.is-opened .c-read-more-btn__span:nth-child(1) {
  display: none; }

.c-person-card.is-opened .c-read-more-btn__span:nth-child(2) {
  display: block; }

.c-person-card.is-opened .c-underline-link__icon {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg); }

/* ==========================================================================
   Redirect cta
   ========================================================================== */
.c-redirect-cta {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  padding: 32px 0; }

.c-redirect-cta__title {
  margin-bottom: 8px; }

.c-redirect-cta .o-icon {
  fill: #FF6352; }

@media (min-width: 768px) {
  .c-redirect-cta {
    -webkit-box-align: baseline;
            align-items: baseline;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    padding: 24px 0; }
  .c-redirect-cta__section {
    width: 28%;
    font-weight: 700; }
  .c-redirect-cta__icon {
    margin-left: auto; } }

@media (min-width: 1200px) {
  .c-redirect-cta__section {
    width: 17%; } }

/* ==========================================================================
   Results heading
   ========================================================================== */
.c-results-heading {
  font-size: 26px;
  font-weight: 500;
  line-height: 1.15385; }
  @media (min-width: 768px) {
    .c-results-heading {
      font-size: 38px;
      line-height: 1.26316; } }
  @media (min-width: 1200px) {
    .c-results-heading {
      font-size: 48px;
      line-height: 1.16667; } }

.c-results-heading__accent {
  color: #FF6352; }

/* ==========================================================================
   Progress
   ========================================================================== */
.c-progress {
  display: -webkit-box;
  display: flex;
  position: relative;
  height: 8px;
  width: 100%;
  box-shadow: inset 0px 0px 0px 1px rgba(0, 0, 0, 0.1);
  margin: 0 24px 0 13px;
  border-radius: 10px;
  background: rgba(255, 255, 255, 0.5);
  cursor: ew-resize; }

.c-progress__filled {
  width: 0;
  border-radius: 10px;
  background-color: #FF6352; }

.c-progress__info {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
          justify-content: space-between;
  position: absolute;
  bottom: 14px;
  width: 100%;
  color: #FFFFFF; }

.section-markup-wrapper .c-progress__filled {
  width: 50%; }

/* ==========================================================================
   Search form
   ========================================================================== */
.f-search-form {
  width: 100%;
  margin: 0; }

.f-search-form .f-field {
  position: relative;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  overflow: hidden;
  width: 100%;
  max-width: 144px;
  margin: 0 auto;
  -webkit-transition: 250ms ease-in-out max-width;
  transition: 250ms ease-in-out max-width; }

.f-search-form .f-field__control {
  width: 100%;
  height: 48px;
  padding: 0;
  padding-right: 30px;
  color: #FFFFFF;
  border-width: 0 0 2px;
  border-style: solid;
  border-color: #FFFFFF;
  border-radius: 0;
  background-color: transparent;
  font-size: 22px;
  font-weight: 500;
  line-height: 1.13636;
  letter-spacing: 0.25px;
  font-weight: 400; }
  @media (min-width: 768px) {
    .f-search-form .f-field__control {
      font-size: 34px;
      line-height: 1.17647; } }
  .f-search-form .f-field__control:focus, .f-search-form .f-field__control:active {
    outline: none; }
  .f-search-form .f-field__control::-webkit-input-placeholder {
    opacity: 1;
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }
  .f-search-form .f-field__control::-moz-placeholder {
    opacity: 1;
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }
  .f-search-form .f-field__control:-ms-input-placeholder {
    opacity: 1;
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }
  .f-search-form .f-field__control::-ms-input-placeholder {
    opacity: 1;
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }
  .f-search-form .f-field__control::placeholder {
    opacity: 1;
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }
  .f-search-form .f-field__control:-ms-input-placeholder {
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }
  .f-search-form .f-field__control::-ms-input-placeholder {
    color: rgba(255, 255, 255, 0.3);
    font-weight: 400; }

.f-search-form .f-field__btn {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: end;
          justify-content: flex-end;
  -webkit-box-align: center;
          align-items: center;
  flex-shrink: 0;
  width: 30px;
  height: 48px;
  padding: 0;
  color: #FFFFFF;
  border: 0;
  background-color: transparent; }

.f-search-form .f-field__btn--hidden {
  display: none; }

.is-search-opened .f-search-form .f-field__btn {
  display: none; }

.is-search-opened .f-search-form .f-field__btn--hidden {
  display: -webkit-box;
  display: flex; }

@media (min-width: 0) and (max-width: 1199px) {
  .is-search-opened .f-search-form .f-field {
    max-width: 100%; } }

@media (min-width: 1200px) {
  .l-header .f-search-form {
    display: none; }
  .f-search-form .f-field {
    max-width: 872px; }
  .f-search-form .f-field .o-icon--search {
    font-size: 28px; }
  .f-search-form .f-field__control {
    color: #FF6352;
    border-color: #FF6352; }
    .f-search-form .f-field__control::-webkit-input-placeholder {
      opacity: 1;
      color: rgba(255, 99, 82, 0.3); }
    .f-search-form .f-field__control::-moz-placeholder {
      opacity: 1;
      color: rgba(255, 99, 82, 0.3); }
    .f-search-form .f-field__control:-ms-input-placeholder {
      opacity: 1;
      color: rgba(255, 99, 82, 0.3); }
    .f-search-form .f-field__control::-ms-input-placeholder {
      opacity: 1;
      color: rgba(255, 99, 82, 0.3); }
    .f-search-form .f-field__control::placeholder {
      opacity: 1;
      color: rgba(255, 99, 82, 0.3); }
    .f-search-form .f-field__control:-ms-input-placeholder {
      color: rgba(255, 99, 82, 0.3); }
    .f-search-form .f-field__control::-ms-input-placeholder {
      color: rgba(255, 99, 82, 0.3); }
  .f-search-form .f-field__btn {
    -webkit-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    color: #FF6352; }
    .f-search-form .f-field__btn:hover {
      opacity: .8; }
  .f-field__btn {
    display: none; }
  .f-field__btn--hidden {
    display: -webkit-box;
    display: flex; } }

/* ==========================================================================
   Search
   ========================================================================== */
.c-search-toggler .c-underline-link {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px; }

@media (min-width: 1200px) {
  .c-search-toggler {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
    -webkit-box-align: center;
            align-items: center;
    font-family: "Rawline", "Arial", sans-serif;
    font-size: 14px;
    font-weight: 500;
    line-height: 24px; }
  .c-search-toggler:hover .c-underline-link:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left; } }

/* ==========================================================================
   Slider
   ========================================================================== */
.c-slider {
  position: relative;
  display: -webkit-box;
  display: flex; }

.c-slider__info {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
          justify-content: space-between;
  position: absolute;
  bottom: 12px;
  width: 100%;
  color: #FFFFFF; }

.c-slider__bar {
  width: 70px;
  height: 3px; }

/* ==========================================================================
   Social media
   ========================================================================== */
.c-social-media {
  margin: 0;
  padding: 0;
  list-style: none; }

.c-social-media--horizontal {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center; }

.c-social-media--start {
  -webkit-box-pack: start;
          justify-content: flex-start; }

.c-social-media--alt {
  display: -webkit-box;
  display: flex;
  list-style: none; }

.c-social-media--alt .c-social-media__list {
  margin: 0 8px 0 0; }

.c-social-media__list {
  position: relative;
  margin: 0 8px;
  -webkit-transition: all 0.3s linear 0.1s;
  transition: all 0.3s linear 0.1s; }
  .c-social-media__list:hover {
    opacity: .5; }

.c-social-media__list .o-icon {
  fill: #FF6352; }

@media (min-width: 768px) and (max-width: 1199px) {
  .l-two-cols__box--socials .c-social-media {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-align: start;
            align-items: flex-start;
    margin-top: -8px; }
  .l-two-cols__box--socials .c-social-media__list {
    margin: 8px 0; } }

@media (min-width: 1200px) {
  .c-social-media--alt {
    display: block; }
  .c-social-media--alt .c-social-media__list {
    margin: 0; }
  .c-social-media--alt .c-social-media__list + .c-social-media__list {
    margin-top: 16px; }
  .c-social-media--alt .o-icon {
    fill: #FFFFFF; } }

/* ==========================================================================
   Sub nav box
   ========================================================================== */
.c-sub-nav-box {
  display: none;
  width: 100%; }

.c-sub-nav-box.is-opened {
  display: -webkit-box;
  display: flex; }

.c-sub-nav-box__download {
  display: none; }

.c-sub-nav-box__list {
  width: 100%;
  text-align: center; }

.c-sub-nav-box__list .c-underline-link {
  font-weight: 300; }

@media (min-width: 0) and (max-width: 1199px) {
  .c-sub-nav-box__list .c-underline-link {
    font-size: 20px;
    font-weight: 500;
    line-height: 1.2;
    letter-spacing: 0.15px;
    font-weight: 400;
    font-weight: 400; }
  .c-sub-nav-box__list .c-underline-link .c-underline-link__icon {
    display: none; }
  .c-sub-nav-box__list .c-sub-nav-box__back {
    margin-bottom: 16px;
    font-size: 16px;
    font-weight: 400;
    line-height: 1.5;
    letter-spacing: 0.44px;
    font-weight: 400; }
  .c-sub-nav-box__list .c-sub-nav-box__back .c-underline-link__icon {
    display: -webkit-box;
    display: flex; } }

@media (min-width: 1200px) {
  .c-sub-nav-box {
    position: relative;
    width: 100%;
    max-height: 230px;
    padding: 40px 0; }
    .c-sub-nav-box:before {
      position: absolute;
      top: 0;
      left: -60px;
      width: 24.3%;
      padding-top: 8%;
      content: '';
      background-image: url("/static/img/pic-decor-white-big.png");
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: cover; }
  .c-sub-nav-box__back {
    display: none; }
  .c-sub-nav-box__download {
    position: relative;
    z-index: 1;
    display: block;
    width: 260px;
    margin-top: 4px; }
  .c-sub-nav-box__list {
    width: calc(100% - 260px);
    padding-left: 16px;
    text-align: left; } }

/* ==========================================================================
   Sub nav
   ========================================================================== */
.c-sub-nav {
  display: -webkit-box;
  display: flex; }

.c-sub-nav-list {
  display: -webkit-box;
  display: flex;
  width: 100%;
  margin: 0;
  padding: 0;
  list-style: none; }

.c-sub-nav-list__item {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  text-align: center;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400; }

.c-sub-nav-list__back.c-underline-link {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

@media (min-width: 1200px) {
  .c-sub-nav-list__back {
    display: none; }
  .c-sub-nav-list {
    display: none;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    -webkit-box-pack: center;
            justify-content: center;
    padding: 12px 0; }
  .is-active .c-sub-nav-list {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-pack: start;
            justify-content: flex-start;
    -webkit-box-align: start;
            align-items: flex-start;
    flex-wrap: wrap; }
  .c-sub-nav-list__item {
    display: -webkit-box;
    display: flex; }
  .c-sub-nav-list__item--mobile {
    display: none; }
  .c-sub-nav-list__item--mobile:not(:last-child) {
    margin-right: 0; } }

/* ==========================================================================
   Table
   ========================================================================== */
.c-table {
  width: 100%;
  margin-bottom: 32px; }

.c-table__head {
  display: none;
  width: 100%;
  font-weight: 700;
  color: #000000; }

.c-table__body {
  border-top: 1px solid #D8D8D8; }

.c-table__row {
  width: 100%;
  padding: 32px 0;
  border-bottom: 1px solid #D8D8D8; }

.c-table__col {
  display: -webkit-box;
  display: flex; }

.c-table__col + .c-table__col {
  margin-top: 16px; }

@media (min-width: 768px) {
  .c-table {
    margin-bottom: 56px; }
  .c-table__col {
    padding-right: 24px; } }

@media (min-width: 1200px) {
  .c-table {
    margin-bottom: 80px; }
  .c-table--2-cols .c-table__col,
  .c-table--2-cols .c-table__col:last-child {
    width: calc(100% / 2); }
  .c-table--3-cols .c-table__col,
  .c-table--3-cols .c-table__col:last-child {
    width: calc(100% / 3); }
  .c-table--4-cols .c-table__col,
  .c-table--4-cols .c-table__col:last-child {
    width: calc(100% / 4); }
  .c-table--5-cols .c-table__col,
  .c-table--5-cols .c-table__col:last-child {
    width: calc(100% / 5); }
  .c-table--6-cols .c-table__col,
  .c-table--6-cols .c-table__col:last-child {
    width: calc(100% / 6); }
  .c-table--7-cols .c-table__col,
  .c-table--7-cols .c-table__col:last-child {
    width: calc(100% / 7); }
  .c-table--8-cols .c-table__col,
  .c-table--8-cols .c-table__col:last-child {
    width: calc(100% / 8); }
  .c-table--9-cols .c-table__col,
  .c-table--9-cols .c-table__col:last-child {
    width: calc(100% / 9); }
  .c-table__head {
    display: block;
    border-top: 1px solid #D8D8D8; }
  .c-table__body {
    border-top: 0; }
  .c-table__row {
    display: -webkit-box;
    display: flex;
    padding-top: 32px; }
  .c-table__head .c-table__row {
    min-height: unset; }
  .c-table__col {
    display: block;
    width: 17%; }
  .c-table__col + .c-table__col {
    margin-top: 0; }
  .c-table__col:last-child {
    width: 32%; }
  .c-table__body .t-subtitle-1 {
    display: none; } }

/* ==========================================================================
   Timeline box
   ========================================================================== */
.c-timeline-box__heading {
  margin-bottom: 16px;
  color: #FF6352; }

.c-timeline-box__content img {
  margin-top: 16px;
  width: 100%; }

@media (min-width: 768px) {
  .c-timeline-box__content img {
    margin-top: 28px; } }

/* ==========================================================================
   Timeline list
   ========================================================================== */
.c-timeline-list {
  padding-top: 16px; }

.c-timeline-list__item {
  position: relative;
  padding-top: 120px; }

.c-timeline-list__item:not(:first-of-type) {
  margin-top: 50px; }

.c-timeline-list__item:before {
  position: absolute;
  display: block;
  content: '';
  top: 0;
  left: calc(50% - 10px);
  background-image: url("/static/img/icon-three-lines.svg");
  background-position: 50% 50%;
  background-size: cover;
  width: 22px;
  height: 22px; }

.c-timeline-list__item:after {
  position: absolute;
  display: block;
  content: '';
  background-color: #D8D8D8;
  left: 50%;
  top: 38px;
  height: 63px;
  width: 1px; }

@media (min-width: 768px) {
  .c-timeline-list {
    padding-top: 0; }
  .c-timeline-list__item {
    padding: 0 0 80px 44px; }
  .c-timeline-list__item:not(:first-of-type) {
    margin-top: 0; }
  .c-timeline-list__item:before {
    top: 16px;
    left: -10px; }
  .c-timeline-list__item:after {
    left: 0;
    top: 50px;
    height: calc(100% - 50px); } }

@media (min-width: 1200px) {
  .c-timeline-list__item {
    padding: 0 0 132px 56px; } }

/* ==========================================================================
   Top bar
   ========================================================================== */
.c-topbar {
  text-align: center;
  color: #FFFFFF;
  margin: 0;
  padding: 0;
  list-style: none; }

.c-topbar__item {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center; }
  .c-topbar__item:first-child {
    margin-bottom: 8px; }

.c-topbar__item .c-underline-link {
  font-size: 14px;
  font-weight: 400;
  line-height: 1.71429;
  letter-spacing: 0.25px; }

@media (min-width: 1200px) {
  .c-topbar__item:first-child {
    margin-bottom: 16px; } }

@media (min-width: 1200px) {
  .c-topbar {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
            align-items: center;
    color: #AEA8BB; }
  .c-topbar__item:not(:last-child) {
    margin-right: 32px; }
  .c-topbar__item:first-child {
    margin-bottom: 0; } }

/* ==========================================================================
   Video Teaser
   ========================================================================== */
.c-video-teaser {
  width: 100%; }

.c-video-teaser__heading {
  color: #9078D7; }

@media (min-width: 768px) {
  .c-video-teaser__heading,
  .c-video-teaser__text {
    color: #FFFFFF; }
  .c-video-teaser {
    margin: 0 0 20px 0; }
  .c-video-teaser__heading {
    margin-bottom: 10px; } }

@media (min-width: 768px) and (max-width: 1199px) {
  .c-video-teaser__text {
    font-size: 38px; } }

@media (min-width: 1200px) {
  .c-video-teaser {
    margin-bottom: 24px; }
  .c-video-teaser__heading {
    margin-bottom: 20px; } }

/* ==========================================================================
   Video
   ========================================================================== */
.c-video {
  position: relative;
  padding-top: 55.9%;
  height: 0;
  width: 100%;
  margin: 0 auto;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 50% 50%;
  overflow: hidden; }

.c-video__player {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: -1; }
  .c-video__player.is-visible {
    opacity: 1;
    z-index: 1; }

.c-video__controls {
  position: absolute;
  bottom: 0;
  width: 100%;
  -webkit-transform: translateY(200%);
          transform: translateY(200%);
  -webkit-transition: all .3s;
  transition: all .3s;
  opacity: 0;
  z-index: -1; }

.c-video__close {
  position: absolute;
  top: 24px;
  right: 27px;
  color: #FFFFFF;
  -webkit-transform: translateY(-250%);
          transform: translateY(-250%);
  -webkit-transition: all .3s;
  transition: all .3s;
  cursor: pointer;
  opacity: 0;
  z-index: -1; }

.c-video:hover .c-video__controls,
.c-video:hover .c-video__close {
  -webkit-transform: translateY(0);
          transform: translateY(0); }
  .c-video:hover .c-video__controls.is-visible,
  .c-video:hover .c-video__close.is-visible {
    opacity: 1;
    z-index: 1; }

/* ==========================================================================
   Video Module
   ========================================================================== */
.c-video-module {
  position: relative; }

.c-video-module__content {
  max-width: 320px; }

.c-video-module__content-wrapper {
  position: relative;
  padding-top: 16px;
  padding-bottom: 56px; }

@media (min-width: 768px) {
  .c-video-module__desc--alt {
    font-size: 38px; }
  .c-video-module__content-wrapper {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding-top: 40px;
    padding-bottom: 0; }
  .c-video-module__content {
    max-width: 394px; }
  .c-video-module--alt.is-playing .c-video {
    background-image: unset !important;
    background-color: #000000; }
  .c-video-module--alt.is-playing .c-video-module__content-wrapper {
    display: none; } }

@media (min-width: 768px) and (max-width: 889px) {
  .c-video-module--alt .c-video {
    padding-top: 48.9%; } }

@media (min-width: 890px) {
  .c-video-module--alt .c-video {
    padding-top: 41.9%; } }

@media (min-width: 768px) and (max-width: 959px) {
  .c-video-module--alt .c-video-module__content-wrapper {
    padding-top: 20px; } }

@media (min-width: 1200px) {
  .c-video-module {
    margin-bottom: 80px; }
  .c-video-module__content-wrapper {
    padding-top: 80px;
    padding-bottom: 0; }
  .c-video-module__content {
    max-width: 624px; }
    .c-video-module__content br {
      display: none; } }

/* ==========================================================================
   Widget module
   ========================================================================== */
.c-widget-module {
  display: block;
  width: 100%;
  text-decoration: none;
  color: #FFFFFF;
  background-color: #00B7B4; }
  .c-widget-module:hover .c-underline-link:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left; }

.c-widget-module__main {
  display: -ms-grid;
  display: grid;
  min-width: 50%;
  min-height: 224px;
  padding: 22px 24px;
  -ms-grid-columns: 1fr;
  grid-template-columns: 1fr;
  -ms-grid-rows: (auto)[2] 1fr;
  grid-template-rows: repeat(2, auto) 1fr; }

.c-widget-module__title {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 700;
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 1;
  -ms-grid-row-span: 1;
  grid-row: 1 / 2; }

.c-widget-module__desc {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px;
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 2;
  -ms-grid-row-span: 1;
  grid-row: 2 / 3; }

.c-widget-module__action {
  -ms-grid-row-align: end;
      align-self: end;
  margin-top: 24px;
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1 / 2;
  -ms-grid-row: 3;
  -ms-grid-row-span: 1;
  grid-row: 3 / 4; }

.c-widget-module__media {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-flex: 1;
          flex-grow: 1;
  flex-shrink: 0;
  overflow: hidden;
  width: 100%;
  margin: 0;
  padding-top: 100%;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: cover; }

@media (min-width: 768px) {
  .c-widget-module {
    display: -webkit-box;
    display: flex; }
  .c-widget-module__media {
    width: 50%;
    padding-top: 42%; }
  .c-widget-module__main {
    min-height: unset; }
  .c-widget__col .c-widget-module__main {
    min-height: 224px; } }

/* ==========================================================================
   Widget
   ========================================================================== */
.c-widget {
  position: relative;
  width: 100%;
  max-width: 536px; }

.c-widget--align-right {
  margin-left: auto; }

.c-widget + * {
  margin-top: 72px; }

.c-widget__row {
  width: 100%;
  overflow: hidden; }

.c-widget__col {
  width: 100%; }

.c-widget__iframe {
  position: relative;
  overflow: hidden;
  width: 100%;
  padding-top: 200%; }

.c-widget__iframe iframe {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%; }

@media (min-width: 768px) {
  .c-widget__row {
    display: -webkit-box;
    display: flex; }
  .c-widget__col {
    width: 50%; }
  .c-widget__iframe {
    padding-top: 83%; } }

/* ==========================================================================
   Tabs
   ========================================================================== */
.c-tabs__nav {
  position: relative;
  margin-bottom: 32px; }

.c-tabs__nav--no-margin {
  margin: 0; }

.c-tabs__placeholder {
  padding: 0;
  font-size: inherit;
  cursor: pointer;
  color: inherit;
  border: none;
  background-color: transparent;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
          align-items: center;
  width: 100%;
  padding: 16px 24px;
  font-weight: 700;
  background-color: #F2F0F6; }
  .c-tabs__placeholder:focus, .c-tabs__placeholder:active {
    outline: none; }

.c-tabs__placeholder-icon .o-icon {
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  fill: #FF6352; }

.c-tabs.is-opened .c-tabs__placeholder-icon .o-icon {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg); }

.c-tabs__nav-list {
  position: absolute;
  top: 56px;
  right: 0;
  left: 0;
  z-index: 1;
  overflow: hidden;
  width: 100%;
  max-height: 0;
  -webkit-transition: max-height .3s;
  transition: max-height .3s; }

.c-tabs.is-opened .c-tabs__nav-list {
  position: static;
  max-height: 1000px; }

.c-tabs__nav-item {
  border-top: 1px solid #FFFFFF; }

.c-tabs__nav-item.is-active .c-underline-link:before {
  background-color: #FF6352; }

.c-tabs__cta {
  padding: 0;
  font-size: inherit;
  cursor: pointer;
  color: inherit;
  border: none;
  background-color: transparent;
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400;
  width: 100%;
  padding: 16px 24px;
  font-weight: 400;
  text-align: left;
  background-color: #F2F0F6; }
  .c-tabs__cta:focus, .c-tabs__cta:active {
    outline: none; }

.c-tabs__content-item {
  display: block;
  -webkit-animation: SlideDown .8s;
          animation: SlideDown .8s; }
  .c-tabs__content-item:not(:last-child) {
    margin-bottom: 10px; }

.c-tabs__content-item.is-hidden {
  display: none; }

.c-tabs__content-item:nth-child(even) .c-event-box {
  background-color: #00d6d2; }

.c-tabs__legend {
  margin-top: 24px; }

.c-tabs__heading {
  display: none; }

@media (min-width: 768px) {
  .c-tabs__placeholder {
    display: none; }
  .c-tabs__nav {
    margin-bottom: 40px; }
  .c-tabs__nav--no-margin {
    margin: 0; }
  .c-tabs__nav-list {
    position: static;
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    width: calc(100% + (8px * 12));
    margin-left: -48px;
    margin-right: -48px;
    margin-top: -12px;
    overflow: visible;
    max-height: unset;
    flex-wrap: wrap; }
  .c-tabs__nav-item {
    margin: 12px 48px; }
  .c-tabs__cta {
    padding: 4px 0;
    background-color: transparent; }
  .c-tabs__heading {
    display: block; } }

@media (min-width: 1200px) {
  .c-tabs__nav--no-margin {
    margin: 0; }
  .c-tabs__nav-list {
    width: calc(100% + (8px * 6));
    margin-left: -24px;
    margin-right: -24px;
    margin-top: -12px; }
  .c-tabs__nav-item {
    margin: 12px 24px; } }

/* ==========================================================================
   Tile
   ========================================================================== */
.c-tile {
  position: relative;
  display: -webkit-box;
  display: flex;
  width: 100%;
  padding-top: 80%;
  color: #FFFFFF;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: cover; }
  .c-tile:hover .c-underline-link:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left; }

.c-tile__content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-pack: justify;
          justify-content: space-between;
  width: 100%;
  padding: 22px 24px; }

/* ==========================================================================
   Callouts
   ========================================================================== */
.c-callouts {
  max-width: 228px;
  width: 100%; }

.c-callouts__heading {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  min-height: 55px;
  font-weight: 700; }

.c-callouts__price {
  font-size: 26px;
  font-weight: 500;
  line-height: 1.15385;
  font-size: 48px;
  color: #00B7B4; }
  @media (min-width: 768px) {
    .c-callouts__price {
      font-size: 38px;
      line-height: 1.26316; } }
  @media (min-width: 1200px) {
    .c-callouts__price {
      font-size: 48px;
      line-height: 1.16667; } }

.c-callouts__info {
  display: block;
  margin-top: 8px; }

.c-callouts__date,
.c-callouts__previous-price {
  font-size: 20px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: 0.15px;
  font-weight: 400; }

@media (min-width: 768px) {
  .c-callouts__price {
    margin-top: 0px;
    font-size: 48px; } }

/* ==========================================================================
   Excerpt
   ========================================================================== */
.c-excerpt {
  display: block;
  color: #FFFFFF; }

.c-excerpt--alt {
  color: #241E31; }

.c-excerp__subtitle {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px;
  font-weight: 700; }

.c-excerp__text {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.44px; }

@media (min-width: 1200px) {
  .c-excerpt:hover .c-underline-link:before {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
    -webkit-transform-origin: bottom left;
            transform-origin: bottom left; } }

.c-excerpt--twitter .c-excerpt__name,
.c-excerpt--twitter .c-excerpt__time {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.5;
  letter-spacing: 0.15px;
  font-weight: 700; }

.c-excerpt--twitter .c-excerpt__signature {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center; }

.c-excerpt--twitter .c-excerpt__time {
  margin-right: 8px; }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> 0d84ef8b3bbaf5599b96b474e58a1fab33a406dc
